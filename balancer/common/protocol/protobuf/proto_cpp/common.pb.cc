// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace common {
class UserIdDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UserId>
     _instance;
} _UserId_default_instance_;
class UserIdListDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UserIdList>
     _instance;
} _UserIdList_default_instance_;
class UserInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UserInfo>
     _instance;
} _UserInfo_default_instance_;
class UserInfoListDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UserInfoList>
     _instance;
} _UserInfoList_default_instance_;

namespace protobuf_common_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserId, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserIdList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserIdList, list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfoList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfoList, list_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(UserId)},
  { 6, -1, sizeof(UserIdList)},
  { 12, -1, sizeof(UserInfo)},
  { 18, -1, sizeof(UserInfoList)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserIdList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserInfoList_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "common.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _UserId_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UserId_default_instance_);_UserIdList_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UserIdList_default_instance_);_UserInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UserInfo_default_instance_);_UserInfoList_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UserInfoList_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014common.proto\022\006common\"\031\n\006UserId\022\017\n\007user"
      "_id\030\001 \001(\004\"*\n\nUserIdList\022\034\n\004list\030\002 \003(\0132\016."
      "common.UserId\"\033\n\010UserInfo\022\017\n\007user_id\030\001 \001"
      "(\004\".\n\014UserInfoList\022\036\n\004list\030\002 \003(\0132\020.commo"
      "n.UserInfo*\246\007\n\tErrorCode\022\013\n\007SUCCESS\020\000\022\021\n"
      "\rERR_SYS_BEGIN\020d\022\024\n\020ERR_SYS_OVERLOAD\020e\022\032"
      "\n\026ERR_SYS_REJECT_SERVICE\020f\022\030\n\024ERR_SYS_SE"
      "RVER_INNER\020g\022\023\n\017ERR_SYS_TIMEOUT\020h\022\035\n\031ERR"
      "_SYS_NO_INSERVICE_LIST\020i\022\026\n\022ERR_SYS_TASK"
      "_STATE\020j\022\030\n\024ERR_SYS_TASK_DISCARD\020k\022\020\n\013ER"
      "R_SYS_END\020\307\001\022\025\n\020ERR_PACKET_BEGIN\020\310\001\022\026\n\021E"
      "RR_PACKET_ENCODE\020\311\001\022\026\n\021ERR_PACKET_DECODE"
      "\020\312\001\022\026\n\021ERR_PACKET_HEADER\020\313\001\022\023\n\016ERR_PACKE"
      "T_LEN\020\314\001\022\027\n\022ERR_PACKET_VERSION\020\315\001\022\037\n\032ERR"
      "_PACKET_FROM_SERVICE_ID\020\316\001\022\035\n\030ERR_PACKET"
      "_TO_SERVICE_ID\020\317\001\022\026\n\021ERR_PACKET_APP_ID\020\320"
      "\001\022\033\n\026ERR_PACKET_APP_VERSION\020\321\001\022\033\n\026ERR_PA"
      "CKET_CONN_SEQ_ID\020\322\001\022\032\n\025ERR_PACKET_MSG_SE"
      "Q_ID\020\323\001\022\033\n\026ERR_PACKET_DATA_FORMAT\020\324\001\022\034\n\027"
      "ERR_PACKET_DATA_FIELD_0\020\325\001\022\034\n\027ERR_PACKET"
      "_DATA_FIELD_1\020\326\001\022\034\n\027ERR_PACKET_DATA_FIEL"
      "D_2\020\327\001\022\034\n\027ERR_PACKET_DATA_FIELD_3\020\330\001\022\031\n\024"
      "ERR_PACKET_CHECK_SUM\020\331\001\022\037\n\032ERR_PACKET_UN"
      "KNOWN_REQUEST\020\332\001\022\023\n\016ERR_PACKET_END\020\253\002\022\030\n"
      "\023ERR_INTERFACE_BEGIN\020\254\002\022\030\n\023ERR_INTERFACE"
      "_PARAM\020\255\002\022\027\n\022ERR_INTERFACE_PERM\020\256\002\022\026\n\021ER"
      "R_INTERFACE_END\020\217\003\022\027\n\022ERR_BUSINESS_BEGIN"
      "\020\220N\022\026\n\020ERR_BUSINESS_END\020\237\215\006b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1115);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "common.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_common_2eproto

const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor() {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2eproto::file_level_enum_descriptors[0];
}
bool ErrorCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 199:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 209:
    case 210:
    case 211:
    case 212:
    case 213:
    case 214:
    case 215:
    case 216:
    case 217:
    case 218:
    case 299:
    case 300:
    case 301:
    case 302:
    case 399:
    case 10000:
    case 99999:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserId::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserId::UserId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_common_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.UserId)
}
UserId::UserId(const UserId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:common.UserId)
}

void UserId::SharedCtor() {
  user_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

UserId::~UserId() {
  // @@protoc_insertion_point(destructor:common.UserId)
  SharedDtor();
}

void UserId::SharedDtor() {
}

void UserId::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserId::descriptor() {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserId& UserId::default_instance() {
  protobuf_common_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserId* UserId::New(::google::protobuf::Arena* arena) const {
  UserId* n = new UserId;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserId::Clear() {
// @@protoc_insertion_point(message_clear_start:common.UserId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool UserId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.UserId)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.UserId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.UserId)
  return false;
#undef DO_
}

void UserId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.UserId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->user_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.UserId)
}

::google::protobuf::uint8* UserId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.UserId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->user_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.UserId)
  return target;
}

size_t UserId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.UserId)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.UserId)
  GOOGLE_DCHECK_NE(&from, this);
  const UserId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.UserId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.UserId)
    MergeFrom(*source);
  }
}

void UserId::MergeFrom(const UserId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.UserId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void UserId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.UserId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserId::CopyFrom(const UserId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.UserId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserId::IsInitialized() const {
  return true;
}

void UserId::Swap(UserId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserId::InternalSwap(UserId* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserId::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserId

// uint64 user_id = 1;
void UserId::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UserId::user_id() const {
  // @@protoc_insertion_point(field_get:common.UserId.user_id)
  return user_id_;
}
void UserId::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:common.UserId.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserIdList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserIdList::UserIdList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_common_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.UserIdList)
}
UserIdList::UserIdList(const UserIdList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      list_(from.list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:common.UserIdList)
}

void UserIdList::SharedCtor() {
  _cached_size_ = 0;
}

UserIdList::~UserIdList() {
  // @@protoc_insertion_point(destructor:common.UserIdList)
  SharedDtor();
}

void UserIdList::SharedDtor() {
}

void UserIdList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserIdList::descriptor() {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserIdList& UserIdList::default_instance() {
  protobuf_common_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserIdList* UserIdList::New(::google::protobuf::Arena* arena) const {
  UserIdList* n = new UserIdList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserIdList::Clear() {
// @@protoc_insertion_point(message_clear_start:common.UserIdList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _internal_metadata_.Clear();
}

bool UserIdList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.UserIdList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .common.UserId list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.UserIdList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.UserIdList)
  return false;
#undef DO_
}

void UserIdList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.UserIdList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .common.UserId list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.UserIdList)
}

::google::protobuf::uint8* UserIdList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.UserIdList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .common.UserId list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.UserIdList)
  return target;
}

size_t UserIdList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.UserIdList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .common.UserId list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserIdList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.UserIdList)
  GOOGLE_DCHECK_NE(&from, this);
  const UserIdList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserIdList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.UserIdList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.UserIdList)
    MergeFrom(*source);
  }
}

void UserIdList::MergeFrom(const UserIdList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.UserIdList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void UserIdList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.UserIdList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserIdList::CopyFrom(const UserIdList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.UserIdList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserIdList::IsInitialized() const {
  return true;
}

void UserIdList::Swap(UserIdList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserIdList::InternalSwap(UserIdList* other) {
  using std::swap;
  list_.InternalSwap(&other->list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserIdList::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserIdList

// repeated .common.UserId list = 2;
int UserIdList::list_size() const {
  return list_.size();
}
void UserIdList::clear_list() {
  list_.Clear();
}
const ::common::UserId& UserIdList::list(int index) const {
  // @@protoc_insertion_point(field_get:common.UserIdList.list)
  return list_.Get(index);
}
::common::UserId* UserIdList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:common.UserIdList.list)
  return list_.Mutable(index);
}
::common::UserId* UserIdList::add_list() {
  // @@protoc_insertion_point(field_add:common.UserIdList.list)
  return list_.Add();
}
::google::protobuf::RepeatedPtrField< ::common::UserId >*
UserIdList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:common.UserIdList.list)
  return &list_;
}
const ::google::protobuf::RepeatedPtrField< ::common::UserId >&
UserIdList::list() const {
  // @@protoc_insertion_point(field_list:common.UserIdList.list)
  return list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserInfo::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserInfo::UserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_common_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.UserInfo)
}
UserInfo::UserInfo(const UserInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:common.UserInfo)
}

void UserInfo::SharedCtor() {
  user_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

UserInfo::~UserInfo() {
  // @@protoc_insertion_point(destructor:common.UserInfo)
  SharedDtor();
}

void UserInfo::SharedDtor() {
}

void UserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserInfo::descriptor() {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserInfo& UserInfo::default_instance() {
  protobuf_common_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserInfo* UserInfo::New(::google::protobuf::Arena* arena) const {
  UserInfo* n = new UserInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:common.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool UserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.UserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.UserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.UserInfo)
  return false;
#undef DO_
}

void UserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->user_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.UserInfo)
}

::google::protobuf::uint8* UserInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->user_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.UserInfo)
  return target;
}

size_t UserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.UserInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const UserInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.UserInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.UserInfo)
    MergeFrom(*source);
  }
}

void UserInfo::MergeFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void UserInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInfo::CopyFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInfo::IsInitialized() const {
  return true;
}

void UserInfo::Swap(UserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserInfo::InternalSwap(UserInfo* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserInfo::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserInfo

// uint64 user_id = 1;
void UserInfo::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UserInfo::user_id() const {
  // @@protoc_insertion_point(field_get:common.UserInfo.user_id)
  return user_id_;
}
void UserInfo::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:common.UserInfo.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserInfoList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserInfoList::UserInfoList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_common_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.UserInfoList)
}
UserInfoList::UserInfoList(const UserInfoList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      list_(from.list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:common.UserInfoList)
}

void UserInfoList::SharedCtor() {
  _cached_size_ = 0;
}

UserInfoList::~UserInfoList() {
  // @@protoc_insertion_point(destructor:common.UserInfoList)
  SharedDtor();
}

void UserInfoList::SharedDtor() {
}

void UserInfoList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserInfoList::descriptor() {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserInfoList& UserInfoList::default_instance() {
  protobuf_common_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserInfoList* UserInfoList::New(::google::protobuf::Arena* arena) const {
  UserInfoList* n = new UserInfoList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserInfoList::Clear() {
// @@protoc_insertion_point(message_clear_start:common.UserInfoList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _internal_metadata_.Clear();
}

bool UserInfoList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.UserInfoList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .common.UserInfo list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.UserInfoList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.UserInfoList)
  return false;
#undef DO_
}

void UserInfoList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.UserInfoList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .common.UserInfo list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.UserInfoList)
}

::google::protobuf::uint8* UserInfoList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.UserInfoList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .common.UserInfo list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.UserInfoList)
  return target;
}

size_t UserInfoList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.UserInfoList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .common.UserInfo list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserInfoList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.UserInfoList)
  GOOGLE_DCHECK_NE(&from, this);
  const UserInfoList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserInfoList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.UserInfoList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.UserInfoList)
    MergeFrom(*source);
  }
}

void UserInfoList::MergeFrom(const UserInfoList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.UserInfoList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void UserInfoList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.UserInfoList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInfoList::CopyFrom(const UserInfoList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.UserInfoList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInfoList::IsInitialized() const {
  return true;
}

void UserInfoList::Swap(UserInfoList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserInfoList::InternalSwap(UserInfoList* other) {
  using std::swap;
  list_.InternalSwap(&other->list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserInfoList::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserInfoList

// repeated .common.UserInfo list = 2;
int UserInfoList::list_size() const {
  return list_.size();
}
void UserInfoList::clear_list() {
  list_.Clear();
}
const ::common::UserInfo& UserInfoList::list(int index) const {
  // @@protoc_insertion_point(field_get:common.UserInfoList.list)
  return list_.Get(index);
}
::common::UserInfo* UserInfoList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:common.UserInfoList.list)
  return list_.Mutable(index);
}
::common::UserInfo* UserInfoList::add_list() {
  // @@protoc_insertion_point(field_add:common.UserInfoList.list)
  return list_.Add();
}
::google::protobuf::RepeatedPtrField< ::common::UserInfo >*
UserInfoList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:common.UserInfoList.list)
  return &list_;
}
const ::google::protobuf::RepeatedPtrField< ::common::UserInfo >&
UserInfoList::list() const {
  // @@protoc_insertion_point(field_list:common.UserInfoList.list)
  return list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace common

// @@protoc_insertion_point(global_scope)

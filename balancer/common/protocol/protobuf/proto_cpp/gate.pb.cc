// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gate.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "gate.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace gate {
class GateMsgDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GateMsg>
     _instance;
  const ::common::TestReq* test_req_;
  const ::common::TestRsp* test_rsp_;
  const ::gate::WakeHeartbeatReq* wake_heartbeat_req_;
  const ::gate::WakeHeartbeatRsp* wake_heartbeat_rsp_;
  const ::gate::GetConnIdReq* get_conn_id_req_;
  const ::gate::GetConnIdRsp* get_conn_id_rsp_;
  const ::gate::CloseConnIdReq* close_conn_id_req_;
  const ::gate::CloseConnIdRsp* close_conn_id_rsp_;
  const ::gate::CloseClientReq* close_client_req_;
  const ::gate::CloseClientRsp* close_client_rsp_;
  const ::gate::LogoutReq* logout_req_;
  const ::gate::LogoutRsp* logout_rsp_;
  const ::gate::SetConnLoginReq* set_conn_login_req_;
  const ::gate::SetConnLoginRsp* set_conn_login_rsp_;
} _GateMsg_default_instance_;
class WakeHeartbeatReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WakeHeartbeatReq>
     _instance;
} _WakeHeartbeatReq_default_instance_;
class WakeHeartbeatRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WakeHeartbeatRsp>
     _instance;
} _WakeHeartbeatRsp_default_instance_;
class GetConnIdReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetConnIdReq>
     _instance;
} _GetConnIdReq_default_instance_;
class GetConnIdRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetConnIdRsp>
     _instance;
} _GetConnIdRsp_default_instance_;
class CloseConnIdReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CloseConnIdReq>
     _instance;
} _CloseConnIdReq_default_instance_;
class CloseConnIdRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CloseConnIdRsp>
     _instance;
} _CloseConnIdRsp_default_instance_;
class CloseClientReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CloseClientReq>
     _instance;
} _CloseClientReq_default_instance_;
class CloseClientRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CloseClientRsp>
     _instance;
} _CloseClientRsp_default_instance_;
class LogoutReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LogoutReq>
     _instance;
} _LogoutReq_default_instance_;
class LogoutRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LogoutRsp>
     _instance;
} _LogoutRsp_default_instance_;
class SetConnLoginReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetConnLoginReq>
     _instance;
} _SetConnLoginReq_default_instance_;
class SetConnLoginRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetConnLoginRsp>
     _instance;
} _SetConnLoginRsp_default_instance_;

namespace protobuf_gate_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[13];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GateMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GateMsg, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(GateMsgDefaultTypeInternal, test_req_),
  offsetof(GateMsgDefaultTypeInternal, test_rsp_),
  offsetof(GateMsgDefaultTypeInternal, wake_heartbeat_req_),
  offsetof(GateMsgDefaultTypeInternal, wake_heartbeat_rsp_),
  offsetof(GateMsgDefaultTypeInternal, get_conn_id_req_),
  offsetof(GateMsgDefaultTypeInternal, get_conn_id_rsp_),
  offsetof(GateMsgDefaultTypeInternal, close_conn_id_req_),
  offsetof(GateMsgDefaultTypeInternal, close_conn_id_rsp_),
  offsetof(GateMsgDefaultTypeInternal, close_client_req_),
  offsetof(GateMsgDefaultTypeInternal, close_client_rsp_),
  offsetof(GateMsgDefaultTypeInternal, logout_req_),
  offsetof(GateMsgDefaultTypeInternal, logout_rsp_),
  offsetof(GateMsgDefaultTypeInternal, set_conn_login_req_),
  offsetof(GateMsgDefaultTypeInternal, set_conn_login_rsp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GateMsg, choice_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WakeHeartbeatReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WakeHeartbeatReq, server_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WakeHeartbeatRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WakeHeartbeatRsp, client_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WakeHeartbeatRsp, key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetConnIdReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetConnIdReq, client_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetConnIdRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetConnIdRsp, server_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetConnIdRsp, conn_create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetConnIdRsp, conn_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloseConnIdReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloseConnIdReq, conn_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloseConnIdRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloseClientReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloseClientRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetConnLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetConnLoginReq, conn_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetConnLoginRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(GateMsg)},
  { 20, -1, sizeof(WakeHeartbeatReq)},
  { 26, -1, sizeof(WakeHeartbeatRsp)},
  { 33, -1, sizeof(GetConnIdReq)},
  { 39, -1, sizeof(GetConnIdRsp)},
  { 47, -1, sizeof(CloseConnIdReq)},
  { 53, -1, sizeof(CloseConnIdRsp)},
  { 58, -1, sizeof(CloseClientReq)},
  { 63, -1, sizeof(CloseClientRsp)},
  { 68, -1, sizeof(LogoutReq)},
  { 73, -1, sizeof(LogoutRsp)},
  { 78, -1, sizeof(SetConnLoginReq)},
  { 84, -1, sizeof(SetConnLoginRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_GateMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WakeHeartbeatReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WakeHeartbeatRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetConnIdReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetConnIdRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CloseConnIdReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CloseConnIdRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CloseClientReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CloseClientRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LogoutReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LogoutRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetConnLoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetConnLoginRsp_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "gate.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 13);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::common::protobuf_common_2eproto::InitDefaults();
  _GateMsg_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GateMsg_default_instance_);_WakeHeartbeatReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WakeHeartbeatReq_default_instance_);_WakeHeartbeatRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WakeHeartbeatRsp_default_instance_);_GetConnIdReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetConnIdReq_default_instance_);_GetConnIdRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetConnIdRsp_default_instance_);_CloseConnIdReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CloseConnIdReq_default_instance_);_CloseConnIdRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CloseConnIdRsp_default_instance_);_CloseClientReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CloseClientReq_default_instance_);_CloseClientRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CloseClientRsp_default_instance_);_LogoutReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LogoutReq_default_instance_);_LogoutRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LogoutRsp_default_instance_);_SetConnLoginReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetConnLoginReq_default_instance_);_SetConnLoginRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetConnLoginRsp_default_instance_);_GateMsg_default_instance_.test_req_ = const_cast< ::common::TestReq*>(
      ::common::TestReq::internal_default_instance());
  _GateMsg_default_instance_.test_rsp_ = const_cast< ::common::TestRsp*>(
      ::common::TestRsp::internal_default_instance());
  _GateMsg_default_instance_.wake_heartbeat_req_ = const_cast< ::gate::WakeHeartbeatReq*>(
      ::gate::WakeHeartbeatReq::internal_default_instance());
  _GateMsg_default_instance_.wake_heartbeat_rsp_ = const_cast< ::gate::WakeHeartbeatRsp*>(
      ::gate::WakeHeartbeatRsp::internal_default_instance());
  _GateMsg_default_instance_.get_conn_id_req_ = const_cast< ::gate::GetConnIdReq*>(
      ::gate::GetConnIdReq::internal_default_instance());
  _GateMsg_default_instance_.get_conn_id_rsp_ = const_cast< ::gate::GetConnIdRsp*>(
      ::gate::GetConnIdRsp::internal_default_instance());
  _GateMsg_default_instance_.close_conn_id_req_ = const_cast< ::gate::CloseConnIdReq*>(
      ::gate::CloseConnIdReq::internal_default_instance());
  _GateMsg_default_instance_.close_conn_id_rsp_ = const_cast< ::gate::CloseConnIdRsp*>(
      ::gate::CloseConnIdRsp::internal_default_instance());
  _GateMsg_default_instance_.close_client_req_ = const_cast< ::gate::CloseClientReq*>(
      ::gate::CloseClientReq::internal_default_instance());
  _GateMsg_default_instance_.close_client_rsp_ = const_cast< ::gate::CloseClientRsp*>(
      ::gate::CloseClientRsp::internal_default_instance());
  _GateMsg_default_instance_.logout_req_ = const_cast< ::gate::LogoutReq*>(
      ::gate::LogoutReq::internal_default_instance());
  _GateMsg_default_instance_.logout_rsp_ = const_cast< ::gate::LogoutRsp*>(
      ::gate::LogoutRsp::internal_default_instance());
  _GateMsg_default_instance_.set_conn_login_req_ = const_cast< ::gate::SetConnLoginReq*>(
      ::gate::SetConnLoginReq::internal_default_instance());
  _GateMsg_default_instance_.set_conn_login_rsp_ = const_cast< ::gate::SetConnLoginRsp*>(
      ::gate::SetConnLoginRsp::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\ngate.proto\022\004gate\032\014common.proto\"\251\005\n\007Gat"
      "eMsg\022#\n\010test_req\030\001 \001(\0132\017.common.TestReqH"
      "\000\022#\n\010test_rsp\030\002 \001(\0132\017.common.TestRspH\000\0224"
      "\n\022wake_heartbeat_req\030\003 \001(\0132\026.gate.WakeHe"
      "artbeatReqH\000\0224\n\022wake_heartbeat_rsp\030\004 \001(\013"
      "2\026.gate.WakeHeartbeatRspH\000\022-\n\017get_conn_i"
      "d_req\030\005 \001(\0132\022.gate.GetConnIdReqH\000\022-\n\017get"
      "_conn_id_rsp\030\006 \001(\0132\022.gate.GetConnIdRspH\000"
      "\0221\n\021close_conn_id_req\030\007 \001(\0132\024.gate.Close"
      "ConnIdReqH\000\0221\n\021close_conn_id_rsp\030\010 \001(\0132\024"
      ".gate.CloseConnIdRspH\000\0220\n\020close_client_r"
      "eq\030\t \001(\0132\024.gate.CloseClientReqH\000\0220\n\020clos"
      "e_client_rsp\030\n \001(\0132\024.gate.CloseClientRsp"
      "H\000\022%\n\nlogout_req\030\013 \001(\0132\017.gate.LogoutReqH"
      "\000\022%\n\nlogout_rsp\030\014 \001(\0132\017.gate.LogoutRspH\000"
      "\0223\n\022set_conn_login_req\030\r \001(\0132\025.gate.SetC"
      "onnLoginReqH\000\0223\n\022set_conn_login_rsp\030\016 \001("
      "\0132\025.gate.SetConnLoginRspH\000B\010\n\006choice\"\'\n\020"
      "WakeHeartbeatReq\022\023\n\013server_time\030\001 \001(\004\"4\n"
      "\020WakeHeartbeatRsp\022\023\n\013client_time\030\001 \001(\004\022\013"
      "\n\003key\030\002 \001(\004\"#\n\014GetConnIdReq\022\023\n\013client_ti"
      "me\030\001 \001(\004\"N\n\014GetConnIdRsp\022\023\n\013server_time\030"
      "\001 \001(\004\022\030\n\020conn_create_time\030\002 \001(\r\022\017\n\007conn_"
      "id\030\003 \001(\004\"!\n\016CloseConnIdReq\022\017\n\007conn_id\030\001 "
      "\001(\004\"\020\n\016CloseConnIdRsp\"\020\n\016CloseClientReq\""
      "\020\n\016CloseClientRsp\"\013\n\tLogoutReq\"\013\n\tLogout"
      "Rsp\"\"\n\017SetConnLoginReq\022\017\n\007conn_id\030\001 \001(\004\""
      "\021\n\017SetConnLoginRsp*\267\010\n\tErrorCode\022\013\n\007SUCC"
      "ESS\020\000\022\024\n\rERR_SYS_BEGIN\020\244\320\2161\022\027\n\020ERR_SYS_O"
      "VERLOAD\020\245\320\2161\022\035\n\026ERR_SYS_REJECT_SERVICE\020\246"
      "\320\2161\022\033\n\024ERR_SYS_SERVER_INNER\020\247\320\2161\022\026\n\017ERR_"
      "SYS_TIMEOUT\020\250\320\2161\022 \n\031ERR_SYS_NO_INSERVICE"
      "_LIST\020\251\320\2161\022\031\n\022ERR_SYS_TASK_STATE\020\252\320\2161\022\033\n"
      "\024ERR_SYS_TASK_DISCARD\020\253\320\2161\022\022\n\013ERR_SYS_EN"
      "D\020\207\321\2161\022\027\n\020ERR_PACKET_BEGIN\020\210\321\2161\022\030\n\021ERR_P"
      "ACKET_ENCODE\020\211\321\2161\022\030\n\021ERR_PACKET_DECODE\020\212"
      "\321\2161\022\030\n\021ERR_PACKET_HEADER\020\213\321\2161\022\025\n\016ERR_PAC"
      "KET_LEN\020\214\321\2161\022\031\n\022ERR_PACKET_VERSION\020\215\321\2161\022"
      "!\n\032ERR_PACKET_FROM_SERVICE_ID\020\216\321\2161\022\037\n\030ER"
      "R_PACKET_TO_SERVICE_ID\020\217\321\2161\022\030\n\021ERR_PACKE"
      "T_APP_ID\020\220\321\2161\022\035\n\026ERR_PACKET_APP_VERSION\020"
      "\221\321\2161\022\035\n\026ERR_PACKET_CONN_SEQ_ID\020\222\321\2161\022\034\n\025E"
      "RR_PACKET_MSG_SEQ_ID\020\223\321\2161\022\035\n\026ERR_PACKET_"
      "DATA_FORMAT\020\224\321\2161\022\036\n\027ERR_PACKET_DATA_FIEL"
      "D_0\020\225\321\2161\022\036\n\027ERR_PACKET_DATA_FIELD_1\020\226\321\2161"
      "\022\036\n\027ERR_PACKET_DATA_FIELD_2\020\227\321\2161\022\036\n\027ERR_"
      "PACKET_DATA_FIELD_3\020\230\321\2161\022\033\n\024ERR_PACKET_C"
      "HECK_SUM\020\231\321\2161\022!\n\032ERR_PACKET_UNKNOWN_REQU"
      "EST\020\232\321\2161\022\025\n\016ERR_PACKET_END\020\353\321\2161\022\032\n\023ERR_I"
      "NTERFACE_BEGIN\020\354\321\2161\022\032\n\023ERR_INTERFACE_PAR"
      "AM\020\355\321\2161\022\031\n\022ERR_INTERFACE_PERM\020\356\321\2161\022\034\n\025ER"
      "R_INTERFACE_TIMEOUT\020\357\321\2161\022\030\n\021ERR_INTERFAC"
      "E_END\020\317\322\2161\022\031\n\022ERR_BUSINESS_BEGIN\020\250\327\2161\022$\n"
      "\035ERR_BUSINESS_NOT_FIND_CONN_ID\020\251\327\2161\022\027\n\020E"
      "RR_BUSINESS_END\020\317\235\2171b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2188);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gate.proto", &protobuf_RegisterTypes);
  ::common::protobuf_common_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_gate_2eproto

const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor() {
  protobuf_gate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gate_2eproto::file_level_enum_descriptors[0];
}
bool ErrorCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 103000100:
    case 103000101:
    case 103000102:
    case 103000103:
    case 103000104:
    case 103000105:
    case 103000106:
    case 103000107:
    case 103000199:
    case 103000200:
    case 103000201:
    case 103000202:
    case 103000203:
    case 103000204:
    case 103000205:
    case 103000206:
    case 103000207:
    case 103000208:
    case 103000209:
    case 103000210:
    case 103000211:
    case 103000212:
    case 103000213:
    case 103000214:
    case 103000215:
    case 103000216:
    case 103000217:
    case 103000218:
    case 103000299:
    case 103000300:
    case 103000301:
    case 103000302:
    case 103000303:
    case 103000399:
    case 103001000:
    case 103001001:
    case 103009999:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GateMsg::kTestReqFieldNumber;
const int GateMsg::kTestRspFieldNumber;
const int GateMsg::kWakeHeartbeatReqFieldNumber;
const int GateMsg::kWakeHeartbeatRspFieldNumber;
const int GateMsg::kGetConnIdReqFieldNumber;
const int GateMsg::kGetConnIdRspFieldNumber;
const int GateMsg::kCloseConnIdReqFieldNumber;
const int GateMsg::kCloseConnIdRspFieldNumber;
const int GateMsg::kCloseClientReqFieldNumber;
const int GateMsg::kCloseClientRspFieldNumber;
const int GateMsg::kLogoutReqFieldNumber;
const int GateMsg::kLogoutRspFieldNumber;
const int GateMsg::kSetConnLoginReqFieldNumber;
const int GateMsg::kSetConnLoginRspFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GateMsg::GateMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gate_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gate.GateMsg)
}
GateMsg::GateMsg(const GateMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_choice();
  switch (from.choice_case()) {
    case kTestReq: {
      mutable_test_req()->::common::TestReq::MergeFrom(from.test_req());
      break;
    }
    case kTestRsp: {
      mutable_test_rsp()->::common::TestRsp::MergeFrom(from.test_rsp());
      break;
    }
    case kWakeHeartbeatReq: {
      mutable_wake_heartbeat_req()->::gate::WakeHeartbeatReq::MergeFrom(from.wake_heartbeat_req());
      break;
    }
    case kWakeHeartbeatRsp: {
      mutable_wake_heartbeat_rsp()->::gate::WakeHeartbeatRsp::MergeFrom(from.wake_heartbeat_rsp());
      break;
    }
    case kGetConnIdReq: {
      mutable_get_conn_id_req()->::gate::GetConnIdReq::MergeFrom(from.get_conn_id_req());
      break;
    }
    case kGetConnIdRsp: {
      mutable_get_conn_id_rsp()->::gate::GetConnIdRsp::MergeFrom(from.get_conn_id_rsp());
      break;
    }
    case kCloseConnIdReq: {
      mutable_close_conn_id_req()->::gate::CloseConnIdReq::MergeFrom(from.close_conn_id_req());
      break;
    }
    case kCloseConnIdRsp: {
      mutable_close_conn_id_rsp()->::gate::CloseConnIdRsp::MergeFrom(from.close_conn_id_rsp());
      break;
    }
    case kCloseClientReq: {
      mutable_close_client_req()->::gate::CloseClientReq::MergeFrom(from.close_client_req());
      break;
    }
    case kCloseClientRsp: {
      mutable_close_client_rsp()->::gate::CloseClientRsp::MergeFrom(from.close_client_rsp());
      break;
    }
    case kLogoutReq: {
      mutable_logout_req()->::gate::LogoutReq::MergeFrom(from.logout_req());
      break;
    }
    case kLogoutRsp: {
      mutable_logout_rsp()->::gate::LogoutRsp::MergeFrom(from.logout_rsp());
      break;
    }
    case kSetConnLoginReq: {
      mutable_set_conn_login_req()->::gate::SetConnLoginReq::MergeFrom(from.set_conn_login_req());
      break;
    }
    case kSetConnLoginRsp: {
      mutable_set_conn_login_rsp()->::gate::SetConnLoginRsp::MergeFrom(from.set_conn_login_rsp());
      break;
    }
    case CHOICE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:gate.GateMsg)
}

void GateMsg::SharedCtor() {
  clear_has_choice();
  _cached_size_ = 0;
}

GateMsg::~GateMsg() {
  // @@protoc_insertion_point(destructor:gate.GateMsg)
  SharedDtor();
}

void GateMsg::SharedDtor() {
  if (has_choice()) {
    clear_choice();
  }
}

void GateMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GateMsg::descriptor() {
  protobuf_gate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GateMsg& GateMsg::default_instance() {
  protobuf_gate_2eproto::InitDefaults();
  return *internal_default_instance();
}

GateMsg* GateMsg::New(::google::protobuf::Arena* arena) const {
  GateMsg* n = new GateMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GateMsg::clear_choice() {
// @@protoc_insertion_point(one_of_clear_start:gate.GateMsg)
  switch (choice_case()) {
    case kTestReq: {
      delete choice_.test_req_;
      break;
    }
    case kTestRsp: {
      delete choice_.test_rsp_;
      break;
    }
    case kWakeHeartbeatReq: {
      delete choice_.wake_heartbeat_req_;
      break;
    }
    case kWakeHeartbeatRsp: {
      delete choice_.wake_heartbeat_rsp_;
      break;
    }
    case kGetConnIdReq: {
      delete choice_.get_conn_id_req_;
      break;
    }
    case kGetConnIdRsp: {
      delete choice_.get_conn_id_rsp_;
      break;
    }
    case kCloseConnIdReq: {
      delete choice_.close_conn_id_req_;
      break;
    }
    case kCloseConnIdRsp: {
      delete choice_.close_conn_id_rsp_;
      break;
    }
    case kCloseClientReq: {
      delete choice_.close_client_req_;
      break;
    }
    case kCloseClientRsp: {
      delete choice_.close_client_rsp_;
      break;
    }
    case kLogoutReq: {
      delete choice_.logout_req_;
      break;
    }
    case kLogoutRsp: {
      delete choice_.logout_rsp_;
      break;
    }
    case kSetConnLoginReq: {
      delete choice_.set_conn_login_req_;
      break;
    }
    case kSetConnLoginRsp: {
      delete choice_.set_conn_login_rsp_;
      break;
    }
    case CHOICE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CHOICE_NOT_SET;
}


void GateMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:gate.GateMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_choice();
  _internal_metadata_.Clear();
}

bool GateMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gate.GateMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.TestReq test_req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_test_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.TestRsp test_rsp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_test_rsp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gate.WakeHeartbeatReq wake_heartbeat_req = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_wake_heartbeat_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gate.WakeHeartbeatRsp wake_heartbeat_rsp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_wake_heartbeat_rsp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gate.GetConnIdReq get_conn_id_req = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_get_conn_id_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gate.GetConnIdRsp get_conn_id_rsp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_get_conn_id_rsp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gate.CloseConnIdReq close_conn_id_req = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_close_conn_id_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gate.CloseConnIdRsp close_conn_id_rsp = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_close_conn_id_rsp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gate.CloseClientReq close_client_req = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_close_client_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gate.CloseClientRsp close_client_rsp = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_close_client_rsp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gate.LogoutReq logout_req = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_logout_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gate.LogoutRsp logout_rsp = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_logout_rsp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gate.SetConnLoginReq set_conn_login_req = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_conn_login_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gate.SetConnLoginRsp set_conn_login_rsp = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_conn_login_rsp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gate.GateMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gate.GateMsg)
  return false;
#undef DO_
}

void GateMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gate.GateMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.TestReq test_req = 1;
  if (has_test_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *choice_.test_req_, output);
  }

  // .common.TestRsp test_rsp = 2;
  if (has_test_rsp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *choice_.test_rsp_, output);
  }

  // .gate.WakeHeartbeatReq wake_heartbeat_req = 3;
  if (has_wake_heartbeat_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *choice_.wake_heartbeat_req_, output);
  }

  // .gate.WakeHeartbeatRsp wake_heartbeat_rsp = 4;
  if (has_wake_heartbeat_rsp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *choice_.wake_heartbeat_rsp_, output);
  }

  // .gate.GetConnIdReq get_conn_id_req = 5;
  if (has_get_conn_id_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *choice_.get_conn_id_req_, output);
  }

  // .gate.GetConnIdRsp get_conn_id_rsp = 6;
  if (has_get_conn_id_rsp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *choice_.get_conn_id_rsp_, output);
  }

  // .gate.CloseConnIdReq close_conn_id_req = 7;
  if (has_close_conn_id_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *choice_.close_conn_id_req_, output);
  }

  // .gate.CloseConnIdRsp close_conn_id_rsp = 8;
  if (has_close_conn_id_rsp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *choice_.close_conn_id_rsp_, output);
  }

  // .gate.CloseClientReq close_client_req = 9;
  if (has_close_client_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *choice_.close_client_req_, output);
  }

  // .gate.CloseClientRsp close_client_rsp = 10;
  if (has_close_client_rsp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *choice_.close_client_rsp_, output);
  }

  // .gate.LogoutReq logout_req = 11;
  if (has_logout_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *choice_.logout_req_, output);
  }

  // .gate.LogoutRsp logout_rsp = 12;
  if (has_logout_rsp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *choice_.logout_rsp_, output);
  }

  // .gate.SetConnLoginReq set_conn_login_req = 13;
  if (has_set_conn_login_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *choice_.set_conn_login_req_, output);
  }

  // .gate.SetConnLoginRsp set_conn_login_rsp = 14;
  if (has_set_conn_login_rsp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *choice_.set_conn_login_rsp_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gate.GateMsg)
}

::google::protobuf::uint8* GateMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gate.GateMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.TestReq test_req = 1;
  if (has_test_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *choice_.test_req_, deterministic, target);
  }

  // .common.TestRsp test_rsp = 2;
  if (has_test_rsp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *choice_.test_rsp_, deterministic, target);
  }

  // .gate.WakeHeartbeatReq wake_heartbeat_req = 3;
  if (has_wake_heartbeat_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *choice_.wake_heartbeat_req_, deterministic, target);
  }

  // .gate.WakeHeartbeatRsp wake_heartbeat_rsp = 4;
  if (has_wake_heartbeat_rsp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *choice_.wake_heartbeat_rsp_, deterministic, target);
  }

  // .gate.GetConnIdReq get_conn_id_req = 5;
  if (has_get_conn_id_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *choice_.get_conn_id_req_, deterministic, target);
  }

  // .gate.GetConnIdRsp get_conn_id_rsp = 6;
  if (has_get_conn_id_rsp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *choice_.get_conn_id_rsp_, deterministic, target);
  }

  // .gate.CloseConnIdReq close_conn_id_req = 7;
  if (has_close_conn_id_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *choice_.close_conn_id_req_, deterministic, target);
  }

  // .gate.CloseConnIdRsp close_conn_id_rsp = 8;
  if (has_close_conn_id_rsp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *choice_.close_conn_id_rsp_, deterministic, target);
  }

  // .gate.CloseClientReq close_client_req = 9;
  if (has_close_client_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *choice_.close_client_req_, deterministic, target);
  }

  // .gate.CloseClientRsp close_client_rsp = 10;
  if (has_close_client_rsp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *choice_.close_client_rsp_, deterministic, target);
  }

  // .gate.LogoutReq logout_req = 11;
  if (has_logout_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *choice_.logout_req_, deterministic, target);
  }

  // .gate.LogoutRsp logout_rsp = 12;
  if (has_logout_rsp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *choice_.logout_rsp_, deterministic, target);
  }

  // .gate.SetConnLoginReq set_conn_login_req = 13;
  if (has_set_conn_login_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *choice_.set_conn_login_req_, deterministic, target);
  }

  // .gate.SetConnLoginRsp set_conn_login_rsp = 14;
  if (has_set_conn_login_rsp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *choice_.set_conn_login_rsp_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gate.GateMsg)
  return target;
}

size_t GateMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gate.GateMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (choice_case()) {
    // .common.TestReq test_req = 1;
    case kTestReq: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *choice_.test_req_);
      break;
    }
    // .common.TestRsp test_rsp = 2;
    case kTestRsp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *choice_.test_rsp_);
      break;
    }
    // .gate.WakeHeartbeatReq wake_heartbeat_req = 3;
    case kWakeHeartbeatReq: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *choice_.wake_heartbeat_req_);
      break;
    }
    // .gate.WakeHeartbeatRsp wake_heartbeat_rsp = 4;
    case kWakeHeartbeatRsp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *choice_.wake_heartbeat_rsp_);
      break;
    }
    // .gate.GetConnIdReq get_conn_id_req = 5;
    case kGetConnIdReq: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *choice_.get_conn_id_req_);
      break;
    }
    // .gate.GetConnIdRsp get_conn_id_rsp = 6;
    case kGetConnIdRsp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *choice_.get_conn_id_rsp_);
      break;
    }
    // .gate.CloseConnIdReq close_conn_id_req = 7;
    case kCloseConnIdReq: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *choice_.close_conn_id_req_);
      break;
    }
    // .gate.CloseConnIdRsp close_conn_id_rsp = 8;
    case kCloseConnIdRsp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *choice_.close_conn_id_rsp_);
      break;
    }
    // .gate.CloseClientReq close_client_req = 9;
    case kCloseClientReq: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *choice_.close_client_req_);
      break;
    }
    // .gate.CloseClientRsp close_client_rsp = 10;
    case kCloseClientRsp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *choice_.close_client_rsp_);
      break;
    }
    // .gate.LogoutReq logout_req = 11;
    case kLogoutReq: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *choice_.logout_req_);
      break;
    }
    // .gate.LogoutRsp logout_rsp = 12;
    case kLogoutRsp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *choice_.logout_rsp_);
      break;
    }
    // .gate.SetConnLoginReq set_conn_login_req = 13;
    case kSetConnLoginReq: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *choice_.set_conn_login_req_);
      break;
    }
    // .gate.SetConnLoginRsp set_conn_login_rsp = 14;
    case kSetConnLoginRsp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *choice_.set_conn_login_rsp_);
      break;
    }
    case CHOICE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GateMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gate.GateMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const GateMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GateMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gate.GateMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gate.GateMsg)
    MergeFrom(*source);
  }
}

void GateMsg::MergeFrom(const GateMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gate.GateMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.choice_case()) {
    case kTestReq: {
      mutable_test_req()->::common::TestReq::MergeFrom(from.test_req());
      break;
    }
    case kTestRsp: {
      mutable_test_rsp()->::common::TestRsp::MergeFrom(from.test_rsp());
      break;
    }
    case kWakeHeartbeatReq: {
      mutable_wake_heartbeat_req()->::gate::WakeHeartbeatReq::MergeFrom(from.wake_heartbeat_req());
      break;
    }
    case kWakeHeartbeatRsp: {
      mutable_wake_heartbeat_rsp()->::gate::WakeHeartbeatRsp::MergeFrom(from.wake_heartbeat_rsp());
      break;
    }
    case kGetConnIdReq: {
      mutable_get_conn_id_req()->::gate::GetConnIdReq::MergeFrom(from.get_conn_id_req());
      break;
    }
    case kGetConnIdRsp: {
      mutable_get_conn_id_rsp()->::gate::GetConnIdRsp::MergeFrom(from.get_conn_id_rsp());
      break;
    }
    case kCloseConnIdReq: {
      mutable_close_conn_id_req()->::gate::CloseConnIdReq::MergeFrom(from.close_conn_id_req());
      break;
    }
    case kCloseConnIdRsp: {
      mutable_close_conn_id_rsp()->::gate::CloseConnIdRsp::MergeFrom(from.close_conn_id_rsp());
      break;
    }
    case kCloseClientReq: {
      mutable_close_client_req()->::gate::CloseClientReq::MergeFrom(from.close_client_req());
      break;
    }
    case kCloseClientRsp: {
      mutable_close_client_rsp()->::gate::CloseClientRsp::MergeFrom(from.close_client_rsp());
      break;
    }
    case kLogoutReq: {
      mutable_logout_req()->::gate::LogoutReq::MergeFrom(from.logout_req());
      break;
    }
    case kLogoutRsp: {
      mutable_logout_rsp()->::gate::LogoutRsp::MergeFrom(from.logout_rsp());
      break;
    }
    case kSetConnLoginReq: {
      mutable_set_conn_login_req()->::gate::SetConnLoginReq::MergeFrom(from.set_conn_login_req());
      break;
    }
    case kSetConnLoginRsp: {
      mutable_set_conn_login_rsp()->::gate::SetConnLoginRsp::MergeFrom(from.set_conn_login_rsp());
      break;
    }
    case CHOICE_NOT_SET: {
      break;
    }
  }
}

void GateMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gate.GateMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GateMsg::CopyFrom(const GateMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gate.GateMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GateMsg::IsInitialized() const {
  return true;
}

void GateMsg::Swap(GateMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GateMsg::InternalSwap(GateMsg* other) {
  using std::swap;
  swap(choice_, other->choice_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GateMsg::GetMetadata() const {
  protobuf_gate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gate_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GateMsg

// .common.TestReq test_req = 1;
bool GateMsg::has_test_req() const {
  return choice_case() == kTestReq;
}
void GateMsg::set_has_test_req() {
  _oneof_case_[0] = kTestReq;
}
void GateMsg::clear_test_req() {
  if (has_test_req()) {
    delete choice_.test_req_;
    clear_has_choice();
  }
}
 const ::common::TestReq& GateMsg::test_req() const {
  // @@protoc_insertion_point(field_get:gate.GateMsg.test_req)
  return has_test_req()
      ? *choice_.test_req_
      : ::common::TestReq::default_instance();
}
::common::TestReq* GateMsg::mutable_test_req() {
  if (!has_test_req()) {
    clear_choice();
    set_has_test_req();
    choice_.test_req_ = new ::common::TestReq;
  }
  // @@protoc_insertion_point(field_mutable:gate.GateMsg.test_req)
  return choice_.test_req_;
}
::common::TestReq* GateMsg::release_test_req() {
  // @@protoc_insertion_point(field_release:gate.GateMsg.test_req)
  if (has_test_req()) {
    clear_has_choice();
    ::common::TestReq* temp = choice_.test_req_;
    choice_.test_req_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GateMsg::set_allocated_test_req(::common::TestReq* test_req) {
  clear_choice();
  if (test_req) {
    set_has_test_req();
    choice_.test_req_ = test_req;
  }
  // @@protoc_insertion_point(field_set_allocated:gate.GateMsg.test_req)
}

// .common.TestRsp test_rsp = 2;
bool GateMsg::has_test_rsp() const {
  return choice_case() == kTestRsp;
}
void GateMsg::set_has_test_rsp() {
  _oneof_case_[0] = kTestRsp;
}
void GateMsg::clear_test_rsp() {
  if (has_test_rsp()) {
    delete choice_.test_rsp_;
    clear_has_choice();
  }
}
 const ::common::TestRsp& GateMsg::test_rsp() const {
  // @@protoc_insertion_point(field_get:gate.GateMsg.test_rsp)
  return has_test_rsp()
      ? *choice_.test_rsp_
      : ::common::TestRsp::default_instance();
}
::common::TestRsp* GateMsg::mutable_test_rsp() {
  if (!has_test_rsp()) {
    clear_choice();
    set_has_test_rsp();
    choice_.test_rsp_ = new ::common::TestRsp;
  }
  // @@protoc_insertion_point(field_mutable:gate.GateMsg.test_rsp)
  return choice_.test_rsp_;
}
::common::TestRsp* GateMsg::release_test_rsp() {
  // @@protoc_insertion_point(field_release:gate.GateMsg.test_rsp)
  if (has_test_rsp()) {
    clear_has_choice();
    ::common::TestRsp* temp = choice_.test_rsp_;
    choice_.test_rsp_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GateMsg::set_allocated_test_rsp(::common::TestRsp* test_rsp) {
  clear_choice();
  if (test_rsp) {
    set_has_test_rsp();
    choice_.test_rsp_ = test_rsp;
  }
  // @@protoc_insertion_point(field_set_allocated:gate.GateMsg.test_rsp)
}

// .gate.WakeHeartbeatReq wake_heartbeat_req = 3;
bool GateMsg::has_wake_heartbeat_req() const {
  return choice_case() == kWakeHeartbeatReq;
}
void GateMsg::set_has_wake_heartbeat_req() {
  _oneof_case_[0] = kWakeHeartbeatReq;
}
void GateMsg::clear_wake_heartbeat_req() {
  if (has_wake_heartbeat_req()) {
    delete choice_.wake_heartbeat_req_;
    clear_has_choice();
  }
}
 const ::gate::WakeHeartbeatReq& GateMsg::wake_heartbeat_req() const {
  // @@protoc_insertion_point(field_get:gate.GateMsg.wake_heartbeat_req)
  return has_wake_heartbeat_req()
      ? *choice_.wake_heartbeat_req_
      : ::gate::WakeHeartbeatReq::default_instance();
}
::gate::WakeHeartbeatReq* GateMsg::mutable_wake_heartbeat_req() {
  if (!has_wake_heartbeat_req()) {
    clear_choice();
    set_has_wake_heartbeat_req();
    choice_.wake_heartbeat_req_ = new ::gate::WakeHeartbeatReq;
  }
  // @@protoc_insertion_point(field_mutable:gate.GateMsg.wake_heartbeat_req)
  return choice_.wake_heartbeat_req_;
}
::gate::WakeHeartbeatReq* GateMsg::release_wake_heartbeat_req() {
  // @@protoc_insertion_point(field_release:gate.GateMsg.wake_heartbeat_req)
  if (has_wake_heartbeat_req()) {
    clear_has_choice();
    ::gate::WakeHeartbeatReq* temp = choice_.wake_heartbeat_req_;
    choice_.wake_heartbeat_req_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GateMsg::set_allocated_wake_heartbeat_req(::gate::WakeHeartbeatReq* wake_heartbeat_req) {
  clear_choice();
  if (wake_heartbeat_req) {
    set_has_wake_heartbeat_req();
    choice_.wake_heartbeat_req_ = wake_heartbeat_req;
  }
  // @@protoc_insertion_point(field_set_allocated:gate.GateMsg.wake_heartbeat_req)
}

// .gate.WakeHeartbeatRsp wake_heartbeat_rsp = 4;
bool GateMsg::has_wake_heartbeat_rsp() const {
  return choice_case() == kWakeHeartbeatRsp;
}
void GateMsg::set_has_wake_heartbeat_rsp() {
  _oneof_case_[0] = kWakeHeartbeatRsp;
}
void GateMsg::clear_wake_heartbeat_rsp() {
  if (has_wake_heartbeat_rsp()) {
    delete choice_.wake_heartbeat_rsp_;
    clear_has_choice();
  }
}
 const ::gate::WakeHeartbeatRsp& GateMsg::wake_heartbeat_rsp() const {
  // @@protoc_insertion_point(field_get:gate.GateMsg.wake_heartbeat_rsp)
  return has_wake_heartbeat_rsp()
      ? *choice_.wake_heartbeat_rsp_
      : ::gate::WakeHeartbeatRsp::default_instance();
}
::gate::WakeHeartbeatRsp* GateMsg::mutable_wake_heartbeat_rsp() {
  if (!has_wake_heartbeat_rsp()) {
    clear_choice();
    set_has_wake_heartbeat_rsp();
    choice_.wake_heartbeat_rsp_ = new ::gate::WakeHeartbeatRsp;
  }
  // @@protoc_insertion_point(field_mutable:gate.GateMsg.wake_heartbeat_rsp)
  return choice_.wake_heartbeat_rsp_;
}
::gate::WakeHeartbeatRsp* GateMsg::release_wake_heartbeat_rsp() {
  // @@protoc_insertion_point(field_release:gate.GateMsg.wake_heartbeat_rsp)
  if (has_wake_heartbeat_rsp()) {
    clear_has_choice();
    ::gate::WakeHeartbeatRsp* temp = choice_.wake_heartbeat_rsp_;
    choice_.wake_heartbeat_rsp_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GateMsg::set_allocated_wake_heartbeat_rsp(::gate::WakeHeartbeatRsp* wake_heartbeat_rsp) {
  clear_choice();
  if (wake_heartbeat_rsp) {
    set_has_wake_heartbeat_rsp();
    choice_.wake_heartbeat_rsp_ = wake_heartbeat_rsp;
  }
  // @@protoc_insertion_point(field_set_allocated:gate.GateMsg.wake_heartbeat_rsp)
}

// .gate.GetConnIdReq get_conn_id_req = 5;
bool GateMsg::has_get_conn_id_req() const {
  return choice_case() == kGetConnIdReq;
}
void GateMsg::set_has_get_conn_id_req() {
  _oneof_case_[0] = kGetConnIdReq;
}
void GateMsg::clear_get_conn_id_req() {
  if (has_get_conn_id_req()) {
    delete choice_.get_conn_id_req_;
    clear_has_choice();
  }
}
 const ::gate::GetConnIdReq& GateMsg::get_conn_id_req() const {
  // @@protoc_insertion_point(field_get:gate.GateMsg.get_conn_id_req)
  return has_get_conn_id_req()
      ? *choice_.get_conn_id_req_
      : ::gate::GetConnIdReq::default_instance();
}
::gate::GetConnIdReq* GateMsg::mutable_get_conn_id_req() {
  if (!has_get_conn_id_req()) {
    clear_choice();
    set_has_get_conn_id_req();
    choice_.get_conn_id_req_ = new ::gate::GetConnIdReq;
  }
  // @@protoc_insertion_point(field_mutable:gate.GateMsg.get_conn_id_req)
  return choice_.get_conn_id_req_;
}
::gate::GetConnIdReq* GateMsg::release_get_conn_id_req() {
  // @@protoc_insertion_point(field_release:gate.GateMsg.get_conn_id_req)
  if (has_get_conn_id_req()) {
    clear_has_choice();
    ::gate::GetConnIdReq* temp = choice_.get_conn_id_req_;
    choice_.get_conn_id_req_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GateMsg::set_allocated_get_conn_id_req(::gate::GetConnIdReq* get_conn_id_req) {
  clear_choice();
  if (get_conn_id_req) {
    set_has_get_conn_id_req();
    choice_.get_conn_id_req_ = get_conn_id_req;
  }
  // @@protoc_insertion_point(field_set_allocated:gate.GateMsg.get_conn_id_req)
}

// .gate.GetConnIdRsp get_conn_id_rsp = 6;
bool GateMsg::has_get_conn_id_rsp() const {
  return choice_case() == kGetConnIdRsp;
}
void GateMsg::set_has_get_conn_id_rsp() {
  _oneof_case_[0] = kGetConnIdRsp;
}
void GateMsg::clear_get_conn_id_rsp() {
  if (has_get_conn_id_rsp()) {
    delete choice_.get_conn_id_rsp_;
    clear_has_choice();
  }
}
 const ::gate::GetConnIdRsp& GateMsg::get_conn_id_rsp() const {
  // @@protoc_insertion_point(field_get:gate.GateMsg.get_conn_id_rsp)
  return has_get_conn_id_rsp()
      ? *choice_.get_conn_id_rsp_
      : ::gate::GetConnIdRsp::default_instance();
}
::gate::GetConnIdRsp* GateMsg::mutable_get_conn_id_rsp() {
  if (!has_get_conn_id_rsp()) {
    clear_choice();
    set_has_get_conn_id_rsp();
    choice_.get_conn_id_rsp_ = new ::gate::GetConnIdRsp;
  }
  // @@protoc_insertion_point(field_mutable:gate.GateMsg.get_conn_id_rsp)
  return choice_.get_conn_id_rsp_;
}
::gate::GetConnIdRsp* GateMsg::release_get_conn_id_rsp() {
  // @@protoc_insertion_point(field_release:gate.GateMsg.get_conn_id_rsp)
  if (has_get_conn_id_rsp()) {
    clear_has_choice();
    ::gate::GetConnIdRsp* temp = choice_.get_conn_id_rsp_;
    choice_.get_conn_id_rsp_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GateMsg::set_allocated_get_conn_id_rsp(::gate::GetConnIdRsp* get_conn_id_rsp) {
  clear_choice();
  if (get_conn_id_rsp) {
    set_has_get_conn_id_rsp();
    choice_.get_conn_id_rsp_ = get_conn_id_rsp;
  }
  // @@protoc_insertion_point(field_set_allocated:gate.GateMsg.get_conn_id_rsp)
}

// .gate.CloseConnIdReq close_conn_id_req = 7;
bool GateMsg::has_close_conn_id_req() const {
  return choice_case() == kCloseConnIdReq;
}
void GateMsg::set_has_close_conn_id_req() {
  _oneof_case_[0] = kCloseConnIdReq;
}
void GateMsg::clear_close_conn_id_req() {
  if (has_close_conn_id_req()) {
    delete choice_.close_conn_id_req_;
    clear_has_choice();
  }
}
 const ::gate::CloseConnIdReq& GateMsg::close_conn_id_req() const {
  // @@protoc_insertion_point(field_get:gate.GateMsg.close_conn_id_req)
  return has_close_conn_id_req()
      ? *choice_.close_conn_id_req_
      : ::gate::CloseConnIdReq::default_instance();
}
::gate::CloseConnIdReq* GateMsg::mutable_close_conn_id_req() {
  if (!has_close_conn_id_req()) {
    clear_choice();
    set_has_close_conn_id_req();
    choice_.close_conn_id_req_ = new ::gate::CloseConnIdReq;
  }
  // @@protoc_insertion_point(field_mutable:gate.GateMsg.close_conn_id_req)
  return choice_.close_conn_id_req_;
}
::gate::CloseConnIdReq* GateMsg::release_close_conn_id_req() {
  // @@protoc_insertion_point(field_release:gate.GateMsg.close_conn_id_req)
  if (has_close_conn_id_req()) {
    clear_has_choice();
    ::gate::CloseConnIdReq* temp = choice_.close_conn_id_req_;
    choice_.close_conn_id_req_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GateMsg::set_allocated_close_conn_id_req(::gate::CloseConnIdReq* close_conn_id_req) {
  clear_choice();
  if (close_conn_id_req) {
    set_has_close_conn_id_req();
    choice_.close_conn_id_req_ = close_conn_id_req;
  }
  // @@protoc_insertion_point(field_set_allocated:gate.GateMsg.close_conn_id_req)
}

// .gate.CloseConnIdRsp close_conn_id_rsp = 8;
bool GateMsg::has_close_conn_id_rsp() const {
  return choice_case() == kCloseConnIdRsp;
}
void GateMsg::set_has_close_conn_id_rsp() {
  _oneof_case_[0] = kCloseConnIdRsp;
}
void GateMsg::clear_close_conn_id_rsp() {
  if (has_close_conn_id_rsp()) {
    delete choice_.close_conn_id_rsp_;
    clear_has_choice();
  }
}
 const ::gate::CloseConnIdRsp& GateMsg::close_conn_id_rsp() const {
  // @@protoc_insertion_point(field_get:gate.GateMsg.close_conn_id_rsp)
  return has_close_conn_id_rsp()
      ? *choice_.close_conn_id_rsp_
      : ::gate::CloseConnIdRsp::default_instance();
}
::gate::CloseConnIdRsp* GateMsg::mutable_close_conn_id_rsp() {
  if (!has_close_conn_id_rsp()) {
    clear_choice();
    set_has_close_conn_id_rsp();
    choice_.close_conn_id_rsp_ = new ::gate::CloseConnIdRsp;
  }
  // @@protoc_insertion_point(field_mutable:gate.GateMsg.close_conn_id_rsp)
  return choice_.close_conn_id_rsp_;
}
::gate::CloseConnIdRsp* GateMsg::release_close_conn_id_rsp() {
  // @@protoc_insertion_point(field_release:gate.GateMsg.close_conn_id_rsp)
  if (has_close_conn_id_rsp()) {
    clear_has_choice();
    ::gate::CloseConnIdRsp* temp = choice_.close_conn_id_rsp_;
    choice_.close_conn_id_rsp_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GateMsg::set_allocated_close_conn_id_rsp(::gate::CloseConnIdRsp* close_conn_id_rsp) {
  clear_choice();
  if (close_conn_id_rsp) {
    set_has_close_conn_id_rsp();
    choice_.close_conn_id_rsp_ = close_conn_id_rsp;
  }
  // @@protoc_insertion_point(field_set_allocated:gate.GateMsg.close_conn_id_rsp)
}

// .gate.CloseClientReq close_client_req = 9;
bool GateMsg::has_close_client_req() const {
  return choice_case() == kCloseClientReq;
}
void GateMsg::set_has_close_client_req() {
  _oneof_case_[0] = kCloseClientReq;
}
void GateMsg::clear_close_client_req() {
  if (has_close_client_req()) {
    delete choice_.close_client_req_;
    clear_has_choice();
  }
}
 const ::gate::CloseClientReq& GateMsg::close_client_req() const {
  // @@protoc_insertion_point(field_get:gate.GateMsg.close_client_req)
  return has_close_client_req()
      ? *choice_.close_client_req_
      : ::gate::CloseClientReq::default_instance();
}
::gate::CloseClientReq* GateMsg::mutable_close_client_req() {
  if (!has_close_client_req()) {
    clear_choice();
    set_has_close_client_req();
    choice_.close_client_req_ = new ::gate::CloseClientReq;
  }
  // @@protoc_insertion_point(field_mutable:gate.GateMsg.close_client_req)
  return choice_.close_client_req_;
}
::gate::CloseClientReq* GateMsg::release_close_client_req() {
  // @@protoc_insertion_point(field_release:gate.GateMsg.close_client_req)
  if (has_close_client_req()) {
    clear_has_choice();
    ::gate::CloseClientReq* temp = choice_.close_client_req_;
    choice_.close_client_req_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GateMsg::set_allocated_close_client_req(::gate::CloseClientReq* close_client_req) {
  clear_choice();
  if (close_client_req) {
    set_has_close_client_req();
    choice_.close_client_req_ = close_client_req;
  }
  // @@protoc_insertion_point(field_set_allocated:gate.GateMsg.close_client_req)
}

// .gate.CloseClientRsp close_client_rsp = 10;
bool GateMsg::has_close_client_rsp() const {
  return choice_case() == kCloseClientRsp;
}
void GateMsg::set_has_close_client_rsp() {
  _oneof_case_[0] = kCloseClientRsp;
}
void GateMsg::clear_close_client_rsp() {
  if (has_close_client_rsp()) {
    delete choice_.close_client_rsp_;
    clear_has_choice();
  }
}
 const ::gate::CloseClientRsp& GateMsg::close_client_rsp() const {
  // @@protoc_insertion_point(field_get:gate.GateMsg.close_client_rsp)
  return has_close_client_rsp()
      ? *choice_.close_client_rsp_
      : ::gate::CloseClientRsp::default_instance();
}
::gate::CloseClientRsp* GateMsg::mutable_close_client_rsp() {
  if (!has_close_client_rsp()) {
    clear_choice();
    set_has_close_client_rsp();
    choice_.close_client_rsp_ = new ::gate::CloseClientRsp;
  }
  // @@protoc_insertion_point(field_mutable:gate.GateMsg.close_client_rsp)
  return choice_.close_client_rsp_;
}
::gate::CloseClientRsp* GateMsg::release_close_client_rsp() {
  // @@protoc_insertion_point(field_release:gate.GateMsg.close_client_rsp)
  if (has_close_client_rsp()) {
    clear_has_choice();
    ::gate::CloseClientRsp* temp = choice_.close_client_rsp_;
    choice_.close_client_rsp_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GateMsg::set_allocated_close_client_rsp(::gate::CloseClientRsp* close_client_rsp) {
  clear_choice();
  if (close_client_rsp) {
    set_has_close_client_rsp();
    choice_.close_client_rsp_ = close_client_rsp;
  }
  // @@protoc_insertion_point(field_set_allocated:gate.GateMsg.close_client_rsp)
}

// .gate.LogoutReq logout_req = 11;
bool GateMsg::has_logout_req() const {
  return choice_case() == kLogoutReq;
}
void GateMsg::set_has_logout_req() {
  _oneof_case_[0] = kLogoutReq;
}
void GateMsg::clear_logout_req() {
  if (has_logout_req()) {
    delete choice_.logout_req_;
    clear_has_choice();
  }
}
 const ::gate::LogoutReq& GateMsg::logout_req() const {
  // @@protoc_insertion_point(field_get:gate.GateMsg.logout_req)
  return has_logout_req()
      ? *choice_.logout_req_
      : ::gate::LogoutReq::default_instance();
}
::gate::LogoutReq* GateMsg::mutable_logout_req() {
  if (!has_logout_req()) {
    clear_choice();
    set_has_logout_req();
    choice_.logout_req_ = new ::gate::LogoutReq;
  }
  // @@protoc_insertion_point(field_mutable:gate.GateMsg.logout_req)
  return choice_.logout_req_;
}
::gate::LogoutReq* GateMsg::release_logout_req() {
  // @@protoc_insertion_point(field_release:gate.GateMsg.logout_req)
  if (has_logout_req()) {
    clear_has_choice();
    ::gate::LogoutReq* temp = choice_.logout_req_;
    choice_.logout_req_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GateMsg::set_allocated_logout_req(::gate::LogoutReq* logout_req) {
  clear_choice();
  if (logout_req) {
    set_has_logout_req();
    choice_.logout_req_ = logout_req;
  }
  // @@protoc_insertion_point(field_set_allocated:gate.GateMsg.logout_req)
}

// .gate.LogoutRsp logout_rsp = 12;
bool GateMsg::has_logout_rsp() const {
  return choice_case() == kLogoutRsp;
}
void GateMsg::set_has_logout_rsp() {
  _oneof_case_[0] = kLogoutRsp;
}
void GateMsg::clear_logout_rsp() {
  if (has_logout_rsp()) {
    delete choice_.logout_rsp_;
    clear_has_choice();
  }
}
 const ::gate::LogoutRsp& GateMsg::logout_rsp() const {
  // @@protoc_insertion_point(field_get:gate.GateMsg.logout_rsp)
  return has_logout_rsp()
      ? *choice_.logout_rsp_
      : ::gate::LogoutRsp::default_instance();
}
::gate::LogoutRsp* GateMsg::mutable_logout_rsp() {
  if (!has_logout_rsp()) {
    clear_choice();
    set_has_logout_rsp();
    choice_.logout_rsp_ = new ::gate::LogoutRsp;
  }
  // @@protoc_insertion_point(field_mutable:gate.GateMsg.logout_rsp)
  return choice_.logout_rsp_;
}
::gate::LogoutRsp* GateMsg::release_logout_rsp() {
  // @@protoc_insertion_point(field_release:gate.GateMsg.logout_rsp)
  if (has_logout_rsp()) {
    clear_has_choice();
    ::gate::LogoutRsp* temp = choice_.logout_rsp_;
    choice_.logout_rsp_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GateMsg::set_allocated_logout_rsp(::gate::LogoutRsp* logout_rsp) {
  clear_choice();
  if (logout_rsp) {
    set_has_logout_rsp();
    choice_.logout_rsp_ = logout_rsp;
  }
  // @@protoc_insertion_point(field_set_allocated:gate.GateMsg.logout_rsp)
}

// .gate.SetConnLoginReq set_conn_login_req = 13;
bool GateMsg::has_set_conn_login_req() const {
  return choice_case() == kSetConnLoginReq;
}
void GateMsg::set_has_set_conn_login_req() {
  _oneof_case_[0] = kSetConnLoginReq;
}
void GateMsg::clear_set_conn_login_req() {
  if (has_set_conn_login_req()) {
    delete choice_.set_conn_login_req_;
    clear_has_choice();
  }
}
 const ::gate::SetConnLoginReq& GateMsg::set_conn_login_req() const {
  // @@protoc_insertion_point(field_get:gate.GateMsg.set_conn_login_req)
  return has_set_conn_login_req()
      ? *choice_.set_conn_login_req_
      : ::gate::SetConnLoginReq::default_instance();
}
::gate::SetConnLoginReq* GateMsg::mutable_set_conn_login_req() {
  if (!has_set_conn_login_req()) {
    clear_choice();
    set_has_set_conn_login_req();
    choice_.set_conn_login_req_ = new ::gate::SetConnLoginReq;
  }
  // @@protoc_insertion_point(field_mutable:gate.GateMsg.set_conn_login_req)
  return choice_.set_conn_login_req_;
}
::gate::SetConnLoginReq* GateMsg::release_set_conn_login_req() {
  // @@protoc_insertion_point(field_release:gate.GateMsg.set_conn_login_req)
  if (has_set_conn_login_req()) {
    clear_has_choice();
    ::gate::SetConnLoginReq* temp = choice_.set_conn_login_req_;
    choice_.set_conn_login_req_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GateMsg::set_allocated_set_conn_login_req(::gate::SetConnLoginReq* set_conn_login_req) {
  clear_choice();
  if (set_conn_login_req) {
    set_has_set_conn_login_req();
    choice_.set_conn_login_req_ = set_conn_login_req;
  }
  // @@protoc_insertion_point(field_set_allocated:gate.GateMsg.set_conn_login_req)
}

// .gate.SetConnLoginRsp set_conn_login_rsp = 14;
bool GateMsg::has_set_conn_login_rsp() const {
  return choice_case() == kSetConnLoginRsp;
}
void GateMsg::set_has_set_conn_login_rsp() {
  _oneof_case_[0] = kSetConnLoginRsp;
}
void GateMsg::clear_set_conn_login_rsp() {
  if (has_set_conn_login_rsp()) {
    delete choice_.set_conn_login_rsp_;
    clear_has_choice();
  }
}
 const ::gate::SetConnLoginRsp& GateMsg::set_conn_login_rsp() const {
  // @@protoc_insertion_point(field_get:gate.GateMsg.set_conn_login_rsp)
  return has_set_conn_login_rsp()
      ? *choice_.set_conn_login_rsp_
      : ::gate::SetConnLoginRsp::default_instance();
}
::gate::SetConnLoginRsp* GateMsg::mutable_set_conn_login_rsp() {
  if (!has_set_conn_login_rsp()) {
    clear_choice();
    set_has_set_conn_login_rsp();
    choice_.set_conn_login_rsp_ = new ::gate::SetConnLoginRsp;
  }
  // @@protoc_insertion_point(field_mutable:gate.GateMsg.set_conn_login_rsp)
  return choice_.set_conn_login_rsp_;
}
::gate::SetConnLoginRsp* GateMsg::release_set_conn_login_rsp() {
  // @@protoc_insertion_point(field_release:gate.GateMsg.set_conn_login_rsp)
  if (has_set_conn_login_rsp()) {
    clear_has_choice();
    ::gate::SetConnLoginRsp* temp = choice_.set_conn_login_rsp_;
    choice_.set_conn_login_rsp_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GateMsg::set_allocated_set_conn_login_rsp(::gate::SetConnLoginRsp* set_conn_login_rsp) {
  clear_choice();
  if (set_conn_login_rsp) {
    set_has_set_conn_login_rsp();
    choice_.set_conn_login_rsp_ = set_conn_login_rsp;
  }
  // @@protoc_insertion_point(field_set_allocated:gate.GateMsg.set_conn_login_rsp)
}

bool GateMsg::has_choice() const {
  return choice_case() != CHOICE_NOT_SET;
}
void GateMsg::clear_has_choice() {
  _oneof_case_[0] = CHOICE_NOT_SET;
}
GateMsg::ChoiceCase GateMsg::choice_case() const {
  return GateMsg::ChoiceCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WakeHeartbeatReq::kServerTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WakeHeartbeatReq::WakeHeartbeatReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gate_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gate.WakeHeartbeatReq)
}
WakeHeartbeatReq::WakeHeartbeatReq(const WakeHeartbeatReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_time_ = from.server_time_;
  // @@protoc_insertion_point(copy_constructor:gate.WakeHeartbeatReq)
}

void WakeHeartbeatReq::SharedCtor() {
  server_time_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

WakeHeartbeatReq::~WakeHeartbeatReq() {
  // @@protoc_insertion_point(destructor:gate.WakeHeartbeatReq)
  SharedDtor();
}

void WakeHeartbeatReq::SharedDtor() {
}

void WakeHeartbeatReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WakeHeartbeatReq::descriptor() {
  protobuf_gate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WakeHeartbeatReq& WakeHeartbeatReq::default_instance() {
  protobuf_gate_2eproto::InitDefaults();
  return *internal_default_instance();
}

WakeHeartbeatReq* WakeHeartbeatReq::New(::google::protobuf::Arena* arena) const {
  WakeHeartbeatReq* n = new WakeHeartbeatReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WakeHeartbeatReq::Clear() {
// @@protoc_insertion_point(message_clear_start:gate.WakeHeartbeatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_time_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool WakeHeartbeatReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gate.WakeHeartbeatReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 server_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &server_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gate.WakeHeartbeatReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gate.WakeHeartbeatReq)
  return false;
#undef DO_
}

void WakeHeartbeatReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gate.WakeHeartbeatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 server_time = 1;
  if (this->server_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->server_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gate.WakeHeartbeatReq)
}

::google::protobuf::uint8* WakeHeartbeatReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gate.WakeHeartbeatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 server_time = 1;
  if (this->server_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->server_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gate.WakeHeartbeatReq)
  return target;
}

size_t WakeHeartbeatReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gate.WakeHeartbeatReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 server_time = 1;
  if (this->server_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->server_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WakeHeartbeatReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gate.WakeHeartbeatReq)
  GOOGLE_DCHECK_NE(&from, this);
  const WakeHeartbeatReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WakeHeartbeatReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gate.WakeHeartbeatReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gate.WakeHeartbeatReq)
    MergeFrom(*source);
  }
}

void WakeHeartbeatReq::MergeFrom(const WakeHeartbeatReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gate.WakeHeartbeatReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server_time() != 0) {
    set_server_time(from.server_time());
  }
}

void WakeHeartbeatReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gate.WakeHeartbeatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WakeHeartbeatReq::CopyFrom(const WakeHeartbeatReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gate.WakeHeartbeatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WakeHeartbeatReq::IsInitialized() const {
  return true;
}

void WakeHeartbeatReq::Swap(WakeHeartbeatReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WakeHeartbeatReq::InternalSwap(WakeHeartbeatReq* other) {
  using std::swap;
  swap(server_time_, other->server_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WakeHeartbeatReq::GetMetadata() const {
  protobuf_gate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gate_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WakeHeartbeatReq

// uint64 server_time = 1;
void WakeHeartbeatReq::clear_server_time() {
  server_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 WakeHeartbeatReq::server_time() const {
  // @@protoc_insertion_point(field_get:gate.WakeHeartbeatReq.server_time)
  return server_time_;
}
void WakeHeartbeatReq::set_server_time(::google::protobuf::uint64 value) {
  
  server_time_ = value;
  // @@protoc_insertion_point(field_set:gate.WakeHeartbeatReq.server_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WakeHeartbeatRsp::kClientTimeFieldNumber;
const int WakeHeartbeatRsp::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WakeHeartbeatRsp::WakeHeartbeatRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gate_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gate.WakeHeartbeatRsp)
}
WakeHeartbeatRsp::WakeHeartbeatRsp(const WakeHeartbeatRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&client_time_, &from.client_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&key_) -
    reinterpret_cast<char*>(&client_time_)) + sizeof(key_));
  // @@protoc_insertion_point(copy_constructor:gate.WakeHeartbeatRsp)
}

void WakeHeartbeatRsp::SharedCtor() {
  ::memset(&client_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&key_) -
      reinterpret_cast<char*>(&client_time_)) + sizeof(key_));
  _cached_size_ = 0;
}

WakeHeartbeatRsp::~WakeHeartbeatRsp() {
  // @@protoc_insertion_point(destructor:gate.WakeHeartbeatRsp)
  SharedDtor();
}

void WakeHeartbeatRsp::SharedDtor() {
}

void WakeHeartbeatRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WakeHeartbeatRsp::descriptor() {
  protobuf_gate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WakeHeartbeatRsp& WakeHeartbeatRsp::default_instance() {
  protobuf_gate_2eproto::InitDefaults();
  return *internal_default_instance();
}

WakeHeartbeatRsp* WakeHeartbeatRsp::New(::google::protobuf::Arena* arena) const {
  WakeHeartbeatRsp* n = new WakeHeartbeatRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WakeHeartbeatRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:gate.WakeHeartbeatRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&client_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&key_) -
      reinterpret_cast<char*>(&client_time_)) + sizeof(key_));
  _internal_metadata_.Clear();
}

bool WakeHeartbeatRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gate.WakeHeartbeatRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 client_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &client_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gate.WakeHeartbeatRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gate.WakeHeartbeatRsp)
  return false;
#undef DO_
}

void WakeHeartbeatRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gate.WakeHeartbeatRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 client_time = 1;
  if (this->client_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->client_time(), output);
  }

  // uint64 key = 2;
  if (this->key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gate.WakeHeartbeatRsp)
}

::google::protobuf::uint8* WakeHeartbeatRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gate.WakeHeartbeatRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 client_time = 1;
  if (this->client_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->client_time(), target);
  }

  // uint64 key = 2;
  if (this->key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gate.WakeHeartbeatRsp)
  return target;
}

size_t WakeHeartbeatRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gate.WakeHeartbeatRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 client_time = 1;
  if (this->client_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->client_time());
  }

  // uint64 key = 2;
  if (this->key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WakeHeartbeatRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gate.WakeHeartbeatRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const WakeHeartbeatRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WakeHeartbeatRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gate.WakeHeartbeatRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gate.WakeHeartbeatRsp)
    MergeFrom(*source);
  }
}

void WakeHeartbeatRsp::MergeFrom(const WakeHeartbeatRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gate.WakeHeartbeatRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.client_time() != 0) {
    set_client_time(from.client_time());
  }
  if (from.key() != 0) {
    set_key(from.key());
  }
}

void WakeHeartbeatRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gate.WakeHeartbeatRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WakeHeartbeatRsp::CopyFrom(const WakeHeartbeatRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gate.WakeHeartbeatRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WakeHeartbeatRsp::IsInitialized() const {
  return true;
}

void WakeHeartbeatRsp::Swap(WakeHeartbeatRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WakeHeartbeatRsp::InternalSwap(WakeHeartbeatRsp* other) {
  using std::swap;
  swap(client_time_, other->client_time_);
  swap(key_, other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WakeHeartbeatRsp::GetMetadata() const {
  protobuf_gate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gate_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WakeHeartbeatRsp

// uint64 client_time = 1;
void WakeHeartbeatRsp::clear_client_time() {
  client_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 WakeHeartbeatRsp::client_time() const {
  // @@protoc_insertion_point(field_get:gate.WakeHeartbeatRsp.client_time)
  return client_time_;
}
void WakeHeartbeatRsp::set_client_time(::google::protobuf::uint64 value) {
  
  client_time_ = value;
  // @@protoc_insertion_point(field_set:gate.WakeHeartbeatRsp.client_time)
}

// uint64 key = 2;
void WakeHeartbeatRsp::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 WakeHeartbeatRsp::key() const {
  // @@protoc_insertion_point(field_get:gate.WakeHeartbeatRsp.key)
  return key_;
}
void WakeHeartbeatRsp::set_key(::google::protobuf::uint64 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:gate.WakeHeartbeatRsp.key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetConnIdReq::kClientTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetConnIdReq::GetConnIdReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gate_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gate.GetConnIdReq)
}
GetConnIdReq::GetConnIdReq(const GetConnIdReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  client_time_ = from.client_time_;
  // @@protoc_insertion_point(copy_constructor:gate.GetConnIdReq)
}

void GetConnIdReq::SharedCtor() {
  client_time_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

GetConnIdReq::~GetConnIdReq() {
  // @@protoc_insertion_point(destructor:gate.GetConnIdReq)
  SharedDtor();
}

void GetConnIdReq::SharedDtor() {
}

void GetConnIdReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetConnIdReq::descriptor() {
  protobuf_gate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetConnIdReq& GetConnIdReq::default_instance() {
  protobuf_gate_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetConnIdReq* GetConnIdReq::New(::google::protobuf::Arena* arena) const {
  GetConnIdReq* n = new GetConnIdReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetConnIdReq::Clear() {
// @@protoc_insertion_point(message_clear_start:gate.GetConnIdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  client_time_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool GetConnIdReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gate.GetConnIdReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 client_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &client_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gate.GetConnIdReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gate.GetConnIdReq)
  return false;
#undef DO_
}

void GetConnIdReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gate.GetConnIdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 client_time = 1;
  if (this->client_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->client_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gate.GetConnIdReq)
}

::google::protobuf::uint8* GetConnIdReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gate.GetConnIdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 client_time = 1;
  if (this->client_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->client_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gate.GetConnIdReq)
  return target;
}

size_t GetConnIdReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gate.GetConnIdReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 client_time = 1;
  if (this->client_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->client_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetConnIdReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gate.GetConnIdReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetConnIdReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetConnIdReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gate.GetConnIdReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gate.GetConnIdReq)
    MergeFrom(*source);
  }
}

void GetConnIdReq::MergeFrom(const GetConnIdReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gate.GetConnIdReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.client_time() != 0) {
    set_client_time(from.client_time());
  }
}

void GetConnIdReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gate.GetConnIdReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetConnIdReq::CopyFrom(const GetConnIdReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gate.GetConnIdReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetConnIdReq::IsInitialized() const {
  return true;
}

void GetConnIdReq::Swap(GetConnIdReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetConnIdReq::InternalSwap(GetConnIdReq* other) {
  using std::swap;
  swap(client_time_, other->client_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetConnIdReq::GetMetadata() const {
  protobuf_gate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gate_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetConnIdReq

// uint64 client_time = 1;
void GetConnIdReq::clear_client_time() {
  client_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 GetConnIdReq::client_time() const {
  // @@protoc_insertion_point(field_get:gate.GetConnIdReq.client_time)
  return client_time_;
}
void GetConnIdReq::set_client_time(::google::protobuf::uint64 value) {
  
  client_time_ = value;
  // @@protoc_insertion_point(field_set:gate.GetConnIdReq.client_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetConnIdRsp::kServerTimeFieldNumber;
const int GetConnIdRsp::kConnCreateTimeFieldNumber;
const int GetConnIdRsp::kConnIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetConnIdRsp::GetConnIdRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gate_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gate.GetConnIdRsp)
}
GetConnIdRsp::GetConnIdRsp(const GetConnIdRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&server_time_, &from.server_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&conn_create_time_) -
    reinterpret_cast<char*>(&server_time_)) + sizeof(conn_create_time_));
  // @@protoc_insertion_point(copy_constructor:gate.GetConnIdRsp)
}

void GetConnIdRsp::SharedCtor() {
  ::memset(&server_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&conn_create_time_) -
      reinterpret_cast<char*>(&server_time_)) + sizeof(conn_create_time_));
  _cached_size_ = 0;
}

GetConnIdRsp::~GetConnIdRsp() {
  // @@protoc_insertion_point(destructor:gate.GetConnIdRsp)
  SharedDtor();
}

void GetConnIdRsp::SharedDtor() {
}

void GetConnIdRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetConnIdRsp::descriptor() {
  protobuf_gate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetConnIdRsp& GetConnIdRsp::default_instance() {
  protobuf_gate_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetConnIdRsp* GetConnIdRsp::New(::google::protobuf::Arena* arena) const {
  GetConnIdRsp* n = new GetConnIdRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetConnIdRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:gate.GetConnIdRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&server_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&conn_create_time_) -
      reinterpret_cast<char*>(&server_time_)) + sizeof(conn_create_time_));
  _internal_metadata_.Clear();
}

bool GetConnIdRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gate.GetConnIdRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 server_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &server_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 conn_create_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &conn_create_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 conn_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &conn_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gate.GetConnIdRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gate.GetConnIdRsp)
  return false;
#undef DO_
}

void GetConnIdRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gate.GetConnIdRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 server_time = 1;
  if (this->server_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->server_time(), output);
  }

  // uint32 conn_create_time = 2;
  if (this->conn_create_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->conn_create_time(), output);
  }

  // uint64 conn_id = 3;
  if (this->conn_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->conn_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gate.GetConnIdRsp)
}

::google::protobuf::uint8* GetConnIdRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gate.GetConnIdRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 server_time = 1;
  if (this->server_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->server_time(), target);
  }

  // uint32 conn_create_time = 2;
  if (this->conn_create_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->conn_create_time(), target);
  }

  // uint64 conn_id = 3;
  if (this->conn_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->conn_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gate.GetConnIdRsp)
  return target;
}

size_t GetConnIdRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gate.GetConnIdRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 server_time = 1;
  if (this->server_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->server_time());
  }

  // uint64 conn_id = 3;
  if (this->conn_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->conn_id());
  }

  // uint32 conn_create_time = 2;
  if (this->conn_create_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->conn_create_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetConnIdRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gate.GetConnIdRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetConnIdRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetConnIdRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gate.GetConnIdRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gate.GetConnIdRsp)
    MergeFrom(*source);
  }
}

void GetConnIdRsp::MergeFrom(const GetConnIdRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gate.GetConnIdRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server_time() != 0) {
    set_server_time(from.server_time());
  }
  if (from.conn_id() != 0) {
    set_conn_id(from.conn_id());
  }
  if (from.conn_create_time() != 0) {
    set_conn_create_time(from.conn_create_time());
  }
}

void GetConnIdRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gate.GetConnIdRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetConnIdRsp::CopyFrom(const GetConnIdRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gate.GetConnIdRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetConnIdRsp::IsInitialized() const {
  return true;
}

void GetConnIdRsp::Swap(GetConnIdRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetConnIdRsp::InternalSwap(GetConnIdRsp* other) {
  using std::swap;
  swap(server_time_, other->server_time_);
  swap(conn_id_, other->conn_id_);
  swap(conn_create_time_, other->conn_create_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetConnIdRsp::GetMetadata() const {
  protobuf_gate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gate_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetConnIdRsp

// uint64 server_time = 1;
void GetConnIdRsp::clear_server_time() {
  server_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 GetConnIdRsp::server_time() const {
  // @@protoc_insertion_point(field_get:gate.GetConnIdRsp.server_time)
  return server_time_;
}
void GetConnIdRsp::set_server_time(::google::protobuf::uint64 value) {
  
  server_time_ = value;
  // @@protoc_insertion_point(field_set:gate.GetConnIdRsp.server_time)
}

// uint32 conn_create_time = 2;
void GetConnIdRsp::clear_conn_create_time() {
  conn_create_time_ = 0u;
}
::google::protobuf::uint32 GetConnIdRsp::conn_create_time() const {
  // @@protoc_insertion_point(field_get:gate.GetConnIdRsp.conn_create_time)
  return conn_create_time_;
}
void GetConnIdRsp::set_conn_create_time(::google::protobuf::uint32 value) {
  
  conn_create_time_ = value;
  // @@protoc_insertion_point(field_set:gate.GetConnIdRsp.conn_create_time)
}

// uint64 conn_id = 3;
void GetConnIdRsp::clear_conn_id() {
  conn_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 GetConnIdRsp::conn_id() const {
  // @@protoc_insertion_point(field_get:gate.GetConnIdRsp.conn_id)
  return conn_id_;
}
void GetConnIdRsp::set_conn_id(::google::protobuf::uint64 value) {
  
  conn_id_ = value;
  // @@protoc_insertion_point(field_set:gate.GetConnIdRsp.conn_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloseConnIdReq::kConnIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseConnIdReq::CloseConnIdReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gate_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gate.CloseConnIdReq)
}
CloseConnIdReq::CloseConnIdReq(const CloseConnIdReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  conn_id_ = from.conn_id_;
  // @@protoc_insertion_point(copy_constructor:gate.CloseConnIdReq)
}

void CloseConnIdReq::SharedCtor() {
  conn_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

CloseConnIdReq::~CloseConnIdReq() {
  // @@protoc_insertion_point(destructor:gate.CloseConnIdReq)
  SharedDtor();
}

void CloseConnIdReq::SharedDtor() {
}

void CloseConnIdReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CloseConnIdReq::descriptor() {
  protobuf_gate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloseConnIdReq& CloseConnIdReq::default_instance() {
  protobuf_gate_2eproto::InitDefaults();
  return *internal_default_instance();
}

CloseConnIdReq* CloseConnIdReq::New(::google::protobuf::Arena* arena) const {
  CloseConnIdReq* n = new CloseConnIdReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CloseConnIdReq::Clear() {
// @@protoc_insertion_point(message_clear_start:gate.CloseConnIdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  conn_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool CloseConnIdReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gate.CloseConnIdReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 conn_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &conn_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gate.CloseConnIdReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gate.CloseConnIdReq)
  return false;
#undef DO_
}

void CloseConnIdReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gate.CloseConnIdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 conn_id = 1;
  if (this->conn_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->conn_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gate.CloseConnIdReq)
}

::google::protobuf::uint8* CloseConnIdReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gate.CloseConnIdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 conn_id = 1;
  if (this->conn_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->conn_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gate.CloseConnIdReq)
  return target;
}

size_t CloseConnIdReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gate.CloseConnIdReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 conn_id = 1;
  if (this->conn_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->conn_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CloseConnIdReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gate.CloseConnIdReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseConnIdReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloseConnIdReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gate.CloseConnIdReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gate.CloseConnIdReq)
    MergeFrom(*source);
  }
}

void CloseConnIdReq::MergeFrom(const CloseConnIdReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gate.CloseConnIdReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.conn_id() != 0) {
    set_conn_id(from.conn_id());
  }
}

void CloseConnIdReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gate.CloseConnIdReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseConnIdReq::CopyFrom(const CloseConnIdReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gate.CloseConnIdReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseConnIdReq::IsInitialized() const {
  return true;
}

void CloseConnIdReq::Swap(CloseConnIdReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseConnIdReq::InternalSwap(CloseConnIdReq* other) {
  using std::swap;
  swap(conn_id_, other->conn_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CloseConnIdReq::GetMetadata() const {
  protobuf_gate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gate_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CloseConnIdReq

// uint64 conn_id = 1;
void CloseConnIdReq::clear_conn_id() {
  conn_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CloseConnIdReq::conn_id() const {
  // @@protoc_insertion_point(field_get:gate.CloseConnIdReq.conn_id)
  return conn_id_;
}
void CloseConnIdReq::set_conn_id(::google::protobuf::uint64 value) {
  
  conn_id_ = value;
  // @@protoc_insertion_point(field_set:gate.CloseConnIdReq.conn_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseConnIdRsp::CloseConnIdRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gate_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gate.CloseConnIdRsp)
}
CloseConnIdRsp::CloseConnIdRsp(const CloseConnIdRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gate.CloseConnIdRsp)
}

void CloseConnIdRsp::SharedCtor() {
  _cached_size_ = 0;
}

CloseConnIdRsp::~CloseConnIdRsp() {
  // @@protoc_insertion_point(destructor:gate.CloseConnIdRsp)
  SharedDtor();
}

void CloseConnIdRsp::SharedDtor() {
}

void CloseConnIdRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CloseConnIdRsp::descriptor() {
  protobuf_gate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloseConnIdRsp& CloseConnIdRsp::default_instance() {
  protobuf_gate_2eproto::InitDefaults();
  return *internal_default_instance();
}

CloseConnIdRsp* CloseConnIdRsp::New(::google::protobuf::Arena* arena) const {
  CloseConnIdRsp* n = new CloseConnIdRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CloseConnIdRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:gate.CloseConnIdRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool CloseConnIdRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gate.CloseConnIdRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:gate.CloseConnIdRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gate.CloseConnIdRsp)
  return false;
#undef DO_
}

void CloseConnIdRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gate.CloseConnIdRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gate.CloseConnIdRsp)
}

::google::protobuf::uint8* CloseConnIdRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gate.CloseConnIdRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gate.CloseConnIdRsp)
  return target;
}

size_t CloseConnIdRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gate.CloseConnIdRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CloseConnIdRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gate.CloseConnIdRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseConnIdRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloseConnIdRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gate.CloseConnIdRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gate.CloseConnIdRsp)
    MergeFrom(*source);
  }
}

void CloseConnIdRsp::MergeFrom(const CloseConnIdRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gate.CloseConnIdRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CloseConnIdRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gate.CloseConnIdRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseConnIdRsp::CopyFrom(const CloseConnIdRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gate.CloseConnIdRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseConnIdRsp::IsInitialized() const {
  return true;
}

void CloseConnIdRsp::Swap(CloseConnIdRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseConnIdRsp::InternalSwap(CloseConnIdRsp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CloseConnIdRsp::GetMetadata() const {
  protobuf_gate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gate_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CloseConnIdRsp

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseClientReq::CloseClientReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gate_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gate.CloseClientReq)
}
CloseClientReq::CloseClientReq(const CloseClientReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gate.CloseClientReq)
}

void CloseClientReq::SharedCtor() {
  _cached_size_ = 0;
}

CloseClientReq::~CloseClientReq() {
  // @@protoc_insertion_point(destructor:gate.CloseClientReq)
  SharedDtor();
}

void CloseClientReq::SharedDtor() {
}

void CloseClientReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CloseClientReq::descriptor() {
  protobuf_gate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloseClientReq& CloseClientReq::default_instance() {
  protobuf_gate_2eproto::InitDefaults();
  return *internal_default_instance();
}

CloseClientReq* CloseClientReq::New(::google::protobuf::Arena* arena) const {
  CloseClientReq* n = new CloseClientReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CloseClientReq::Clear() {
// @@protoc_insertion_point(message_clear_start:gate.CloseClientReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool CloseClientReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gate.CloseClientReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:gate.CloseClientReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gate.CloseClientReq)
  return false;
#undef DO_
}

void CloseClientReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gate.CloseClientReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gate.CloseClientReq)
}

::google::protobuf::uint8* CloseClientReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gate.CloseClientReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gate.CloseClientReq)
  return target;
}

size_t CloseClientReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gate.CloseClientReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CloseClientReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gate.CloseClientReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseClientReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloseClientReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gate.CloseClientReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gate.CloseClientReq)
    MergeFrom(*source);
  }
}

void CloseClientReq::MergeFrom(const CloseClientReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gate.CloseClientReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CloseClientReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gate.CloseClientReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseClientReq::CopyFrom(const CloseClientReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gate.CloseClientReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseClientReq::IsInitialized() const {
  return true;
}

void CloseClientReq::Swap(CloseClientReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseClientReq::InternalSwap(CloseClientReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CloseClientReq::GetMetadata() const {
  protobuf_gate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gate_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CloseClientReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseClientRsp::CloseClientRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gate_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gate.CloseClientRsp)
}
CloseClientRsp::CloseClientRsp(const CloseClientRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gate.CloseClientRsp)
}

void CloseClientRsp::SharedCtor() {
  _cached_size_ = 0;
}

CloseClientRsp::~CloseClientRsp() {
  // @@protoc_insertion_point(destructor:gate.CloseClientRsp)
  SharedDtor();
}

void CloseClientRsp::SharedDtor() {
}

void CloseClientRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CloseClientRsp::descriptor() {
  protobuf_gate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloseClientRsp& CloseClientRsp::default_instance() {
  protobuf_gate_2eproto::InitDefaults();
  return *internal_default_instance();
}

CloseClientRsp* CloseClientRsp::New(::google::protobuf::Arena* arena) const {
  CloseClientRsp* n = new CloseClientRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CloseClientRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:gate.CloseClientRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool CloseClientRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gate.CloseClientRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:gate.CloseClientRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gate.CloseClientRsp)
  return false;
#undef DO_
}

void CloseClientRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gate.CloseClientRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gate.CloseClientRsp)
}

::google::protobuf::uint8* CloseClientRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gate.CloseClientRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gate.CloseClientRsp)
  return target;
}

size_t CloseClientRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gate.CloseClientRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CloseClientRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gate.CloseClientRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseClientRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloseClientRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gate.CloseClientRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gate.CloseClientRsp)
    MergeFrom(*source);
  }
}

void CloseClientRsp::MergeFrom(const CloseClientRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gate.CloseClientRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CloseClientRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gate.CloseClientRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseClientRsp::CopyFrom(const CloseClientRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gate.CloseClientRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseClientRsp::IsInitialized() const {
  return true;
}

void CloseClientRsp::Swap(CloseClientRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseClientRsp::InternalSwap(CloseClientRsp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CloseClientRsp::GetMetadata() const {
  protobuf_gate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gate_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CloseClientRsp

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogoutReq::LogoutReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gate_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gate.LogoutReq)
}
LogoutReq::LogoutReq(const LogoutReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gate.LogoutReq)
}

void LogoutReq::SharedCtor() {
  _cached_size_ = 0;
}

LogoutReq::~LogoutReq() {
  // @@protoc_insertion_point(destructor:gate.LogoutReq)
  SharedDtor();
}

void LogoutReq::SharedDtor() {
}

void LogoutReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogoutReq::descriptor() {
  protobuf_gate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogoutReq& LogoutReq::default_instance() {
  protobuf_gate_2eproto::InitDefaults();
  return *internal_default_instance();
}

LogoutReq* LogoutReq::New(::google::protobuf::Arena* arena) const {
  LogoutReq* n = new LogoutReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogoutReq::Clear() {
// @@protoc_insertion_point(message_clear_start:gate.LogoutReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool LogoutReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gate.LogoutReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:gate.LogoutReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gate.LogoutReq)
  return false;
#undef DO_
}

void LogoutReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gate.LogoutReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gate.LogoutReq)
}

::google::protobuf::uint8* LogoutReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gate.LogoutReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gate.LogoutReq)
  return target;
}

size_t LogoutReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gate.LogoutReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogoutReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gate.LogoutReq)
  GOOGLE_DCHECK_NE(&from, this);
  const LogoutReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogoutReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gate.LogoutReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gate.LogoutReq)
    MergeFrom(*source);
  }
}

void LogoutReq::MergeFrom(const LogoutReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gate.LogoutReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void LogoutReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gate.LogoutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogoutReq::CopyFrom(const LogoutReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gate.LogoutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogoutReq::IsInitialized() const {
  return true;
}

void LogoutReq::Swap(LogoutReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogoutReq::InternalSwap(LogoutReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogoutReq::GetMetadata() const {
  protobuf_gate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gate_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogoutReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogoutRsp::LogoutRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gate_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gate.LogoutRsp)
}
LogoutRsp::LogoutRsp(const LogoutRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gate.LogoutRsp)
}

void LogoutRsp::SharedCtor() {
  _cached_size_ = 0;
}

LogoutRsp::~LogoutRsp() {
  // @@protoc_insertion_point(destructor:gate.LogoutRsp)
  SharedDtor();
}

void LogoutRsp::SharedDtor() {
}

void LogoutRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogoutRsp::descriptor() {
  protobuf_gate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogoutRsp& LogoutRsp::default_instance() {
  protobuf_gate_2eproto::InitDefaults();
  return *internal_default_instance();
}

LogoutRsp* LogoutRsp::New(::google::protobuf::Arena* arena) const {
  LogoutRsp* n = new LogoutRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogoutRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:gate.LogoutRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool LogoutRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gate.LogoutRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:gate.LogoutRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gate.LogoutRsp)
  return false;
#undef DO_
}

void LogoutRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gate.LogoutRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gate.LogoutRsp)
}

::google::protobuf::uint8* LogoutRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gate.LogoutRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gate.LogoutRsp)
  return target;
}

size_t LogoutRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gate.LogoutRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogoutRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gate.LogoutRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const LogoutRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogoutRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gate.LogoutRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gate.LogoutRsp)
    MergeFrom(*source);
  }
}

void LogoutRsp::MergeFrom(const LogoutRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gate.LogoutRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void LogoutRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gate.LogoutRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogoutRsp::CopyFrom(const LogoutRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gate.LogoutRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogoutRsp::IsInitialized() const {
  return true;
}

void LogoutRsp::Swap(LogoutRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogoutRsp::InternalSwap(LogoutRsp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogoutRsp::GetMetadata() const {
  protobuf_gate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gate_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogoutRsp

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetConnLoginReq::kConnIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetConnLoginReq::SetConnLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gate_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gate.SetConnLoginReq)
}
SetConnLoginReq::SetConnLoginReq(const SetConnLoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  conn_id_ = from.conn_id_;
  // @@protoc_insertion_point(copy_constructor:gate.SetConnLoginReq)
}

void SetConnLoginReq::SharedCtor() {
  conn_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

SetConnLoginReq::~SetConnLoginReq() {
  // @@protoc_insertion_point(destructor:gate.SetConnLoginReq)
  SharedDtor();
}

void SetConnLoginReq::SharedDtor() {
}

void SetConnLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetConnLoginReq::descriptor() {
  protobuf_gate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetConnLoginReq& SetConnLoginReq::default_instance() {
  protobuf_gate_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetConnLoginReq* SetConnLoginReq::New(::google::protobuf::Arena* arena) const {
  SetConnLoginReq* n = new SetConnLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetConnLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:gate.SetConnLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  conn_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool SetConnLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gate.SetConnLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 conn_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &conn_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gate.SetConnLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gate.SetConnLoginReq)
  return false;
#undef DO_
}

void SetConnLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gate.SetConnLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 conn_id = 1;
  if (this->conn_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->conn_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gate.SetConnLoginReq)
}

::google::protobuf::uint8* SetConnLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gate.SetConnLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 conn_id = 1;
  if (this->conn_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->conn_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gate.SetConnLoginReq)
  return target;
}

size_t SetConnLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gate.SetConnLoginReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 conn_id = 1;
  if (this->conn_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->conn_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetConnLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gate.SetConnLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetConnLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetConnLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gate.SetConnLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gate.SetConnLoginReq)
    MergeFrom(*source);
  }
}

void SetConnLoginReq::MergeFrom(const SetConnLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gate.SetConnLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.conn_id() != 0) {
    set_conn_id(from.conn_id());
  }
}

void SetConnLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gate.SetConnLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetConnLoginReq::CopyFrom(const SetConnLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gate.SetConnLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetConnLoginReq::IsInitialized() const {
  return true;
}

void SetConnLoginReq::Swap(SetConnLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetConnLoginReq::InternalSwap(SetConnLoginReq* other) {
  using std::swap;
  swap(conn_id_, other->conn_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetConnLoginReq::GetMetadata() const {
  protobuf_gate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gate_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetConnLoginReq

// uint64 conn_id = 1;
void SetConnLoginReq::clear_conn_id() {
  conn_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SetConnLoginReq::conn_id() const {
  // @@protoc_insertion_point(field_get:gate.SetConnLoginReq.conn_id)
  return conn_id_;
}
void SetConnLoginReq::set_conn_id(::google::protobuf::uint64 value) {
  
  conn_id_ = value;
  // @@protoc_insertion_point(field_set:gate.SetConnLoginReq.conn_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetConnLoginRsp::SetConnLoginRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gate_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gate.SetConnLoginRsp)
}
SetConnLoginRsp::SetConnLoginRsp(const SetConnLoginRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gate.SetConnLoginRsp)
}

void SetConnLoginRsp::SharedCtor() {
  _cached_size_ = 0;
}

SetConnLoginRsp::~SetConnLoginRsp() {
  // @@protoc_insertion_point(destructor:gate.SetConnLoginRsp)
  SharedDtor();
}

void SetConnLoginRsp::SharedDtor() {
}

void SetConnLoginRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetConnLoginRsp::descriptor() {
  protobuf_gate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetConnLoginRsp& SetConnLoginRsp::default_instance() {
  protobuf_gate_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetConnLoginRsp* SetConnLoginRsp::New(::google::protobuf::Arena* arena) const {
  SetConnLoginRsp* n = new SetConnLoginRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetConnLoginRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:gate.SetConnLoginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool SetConnLoginRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gate.SetConnLoginRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:gate.SetConnLoginRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gate.SetConnLoginRsp)
  return false;
#undef DO_
}

void SetConnLoginRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gate.SetConnLoginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gate.SetConnLoginRsp)
}

::google::protobuf::uint8* SetConnLoginRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gate.SetConnLoginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gate.SetConnLoginRsp)
  return target;
}

size_t SetConnLoginRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gate.SetConnLoginRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetConnLoginRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gate.SetConnLoginRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetConnLoginRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetConnLoginRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gate.SetConnLoginRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gate.SetConnLoginRsp)
    MergeFrom(*source);
  }
}

void SetConnLoginRsp::MergeFrom(const SetConnLoginRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gate.SetConnLoginRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetConnLoginRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gate.SetConnLoginRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetConnLoginRsp::CopyFrom(const SetConnLoginRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gate.SetConnLoginRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetConnLoginRsp::IsInitialized() const {
  return true;
}

void SetConnLoginRsp::Swap(SetConnLoginRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetConnLoginRsp::InternalSwap(SetConnLoginRsp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetConnLoginRsp::GetMetadata() const {
  protobuf_gate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gate_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetConnLoginRsp

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace gate

// @@protoc_insertion_point(global_scope)

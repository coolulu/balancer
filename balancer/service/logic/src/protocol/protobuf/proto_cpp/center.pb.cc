// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: center.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "center.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace center {
class CenterMsgDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CenterMsg>
     _instance;
  const ::common::TestReq* test_req_;
  const ::common::TestRsp* test_rsp_;
  const ::center::HeartbeatReq* heartbeat_req_;
  const ::center::HeartbeatRsp* heartbeat_rsp_;
  const ::center::SyncServiceReq* sync_service_req_;
  const ::center::SyncServiceRsp* sync_service_rsp_;
} _CenterMsg_default_instance_;
class HeartbeatReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HeartbeatReq>
     _instance;
} _HeartbeatReq_default_instance_;
class HeartbeatRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HeartbeatRsp>
     _instance;
} _HeartbeatRsp_default_instance_;
class SyncServiceReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SyncServiceReq>
     _instance;
} _SyncServiceReq_default_instance_;
class SyncServiceRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SyncServiceRsp>
     _instance;
} _SyncServiceRsp_default_instance_;

namespace protobuf_center_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CenterMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CenterMsg, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(CenterMsgDefaultTypeInternal, test_req_),
  offsetof(CenterMsgDefaultTypeInternal, test_rsp_),
  offsetof(CenterMsgDefaultTypeInternal, heartbeat_req_),
  offsetof(CenterMsgDefaultTypeInternal, heartbeat_rsp_),
  offsetof(CenterMsgDefaultTypeInternal, sync_service_req_),
  offsetof(CenterMsgDefaultTypeInternal, sync_service_rsp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CenterMsg, choice_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatReq, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatReq, service_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatReq, proc_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatReq, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatReq, conf_update_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatReq, conf_json_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatRsp, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatRsp, service_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatRsp, proc_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatRsp, conf_update_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatRsp, expire_second_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncServiceReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncServiceReq, conf_update_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncServiceRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncServiceRsp, conf_update_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncServiceRsp, conf_json_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(CenterMsg)},
  { 12, -1, sizeof(HeartbeatReq)},
  { 23, -1, sizeof(HeartbeatRsp)},
  { 33, -1, sizeof(SyncServiceReq)},
  { 39, -1, sizeof(SyncServiceRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CenterMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HeartbeatReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HeartbeatRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SyncServiceReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SyncServiceRsp_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "center.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::common::protobuf_common_2eproto::InitDefaults();
  _CenterMsg_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CenterMsg_default_instance_);_HeartbeatReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HeartbeatReq_default_instance_);_HeartbeatRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HeartbeatRsp_default_instance_);_SyncServiceReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SyncServiceReq_default_instance_);_SyncServiceRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SyncServiceRsp_default_instance_);_CenterMsg_default_instance_.test_req_ = const_cast< ::common::TestReq*>(
      ::common::TestReq::internal_default_instance());
  _CenterMsg_default_instance_.test_rsp_ = const_cast< ::common::TestRsp*>(
      ::common::TestRsp::internal_default_instance());
  _CenterMsg_default_instance_.heartbeat_req_ = const_cast< ::center::HeartbeatReq*>(
      ::center::HeartbeatReq::internal_default_instance());
  _CenterMsg_default_instance_.heartbeat_rsp_ = const_cast< ::center::HeartbeatRsp*>(
      ::center::HeartbeatRsp::internal_default_instance());
  _CenterMsg_default_instance_.sync_service_req_ = const_cast< ::center::SyncServiceReq*>(
      ::center::SyncServiceReq::internal_default_instance());
  _CenterMsg_default_instance_.sync_service_rsp_ = const_cast< ::center::SyncServiceRsp*>(
      ::center::SyncServiceRsp::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014center.proto\022\006center\032\014common.proto\"\245\002\n"
      "\tCenterMsg\022#\n\010test_req\030\001 \001(\0132\017.common.Te"
      "stReqH\000\022#\n\010test_rsp\030\002 \001(\0132\017.common.TestR"
      "spH\000\022-\n\rheartbeat_req\030\003 \001(\0132\024.center.Hea"
      "rtbeatReqH\000\022-\n\rheartbeat_rsp\030\004 \001(\0132\024.cen"
      "ter.HeartbeatRspH\000\0222\n\020sync_service_req\030\005"
      " \001(\0132\026.center.SyncServiceReqH\000\0222\n\020sync_s"
      "ervice_rsp\030\006 \001(\0132\026.center.SyncServiceRsp"
      "H\000B\010\n\006choice\"~\n\014HeartbeatReq\022\r\n\005level\030\001 "
      "\001(\005\022\022\n\nservice_id\030\002 \001(\005\022\017\n\007proc_id\030\003 \001(\r"
      "\022\r\n\005state\030\004 \001(\r\022\030\n\020conf_update_time\030\005 \001("
      "\004\022\021\n\tconf_json\030\006 \001(\014\"s\n\014HeartbeatRsp\022\r\n\005"
      "level\030\001 \001(\005\022\022\n\nservice_id\030\002 \001(\005\022\017\n\007proc_"
      "id\030\003 \001(\r\022\030\n\020conf_update_time\030\004 \001(\004\022\025\n\rex"
      "pire_second\030\005 \001(\r\"*\n\016SyncServiceReq\022\030\n\020c"
      "onf_update_time\030\001 \001(\004\"=\n\016SyncServiceRsp\022"
      "\030\n\020conf_update_time\030\001 \001(\004\022\021\n\tconf_json\030\002"
      " \001(\014*\364\t\n\tErrorCode\022\013\n\007SUCCESS\020\000\022\020\n\tERR_B"
      "EGIN\020\300\306\2240\022\024\n\rERR_SYS_BEGIN\020\244\307\2240\022\027\n\020ERR_S"
      "YS_OVERLOAD\020\245\307\2240\022\035\n\026ERR_SYS_REJECT_SERVI"
      "CE\020\246\307\2240\022\033\n\024ERR_SYS_SERVER_INNER\020\247\307\2240\022\026\n\017"
      "ERR_SYS_TIMEOUT\020\250\307\2240\022 \n\031ERR_SYS_NO_INSER"
      "VICE_LIST\020\251\307\2240\022\031\n\022ERR_SYS_TASK_STATE\020\252\307\224"
      "0\022\033\n\024ERR_SYS_TASK_DISCARD\020\253\307\2240\022\022\n\013ERR_SY"
      "S_END\020\207\310\2240\022\027\n\020ERR_PACKET_BEGIN\020\210\310\2240\022\030\n\021E"
      "RR_PACKET_ENCODE\020\211\310\2240\022\030\n\021ERR_PACKET_DECO"
      "DE\020\212\310\2240\022\030\n\021ERR_PACKET_HEADER\020\213\310\2240\022\025\n\016ERR"
      "_PACKET_LEN\020\214\310\2240\022\031\n\022ERR_PACKET_VERSION\020\215"
      "\310\2240\022!\n\032ERR_PACKET_FROM_SERVICE_ID\020\216\310\2240\022\037"
      "\n\030ERR_PACKET_TO_SERVICE_ID\020\217\310\2240\022\030\n\021ERR_P"
      "ACKET_APP_ID\020\220\310\2240\022\035\n\026ERR_PACKET_APP_VERS"
      "ION\020\221\310\2240\022\035\n\026ERR_PACKET_CONN_SEQ_ID\020\222\310\2240\022"
      "\034\n\025ERR_PACKET_MSG_SEQ_ID\020\223\310\2240\022\035\n\026ERR_PAC"
      "KET_DATA_FORMAT\020\224\310\2240\022\036\n\027ERR_PACKET_DATA_"
      "FIELD_0\020\225\310\2240\022\036\n\027ERR_PACKET_DATA_FIELD_1\020"
      "\226\310\2240\022\036\n\027ERR_PACKET_DATA_FIELD_2\020\227\310\2240\022\036\n\027"
      "ERR_PACKET_DATA_FIELD_3\020\230\310\2240\022\033\n\024ERR_PACK"
      "ET_CHECK_SUM\020\231\310\2240\022!\n\032ERR_PACKET_UNKNOWN_"
      "REQUEST\020\232\310\2240\022\025\n\016ERR_PACKET_END\020\353\310\2240\022\032\n\023E"
      "RR_INTERFACE_BEGIN\020\354\310\2240\022\032\n\023ERR_INTERFACE"
      "_PARAM\020\355\310\2240\022\031\n\022ERR_INTERFACE_PERM\020\356\310\2240\022\034"
      "\n\025ERR_INTERFACE_TIMEOUT\020\357\310\2240\022#\n\034ERR_INTE"
      "RFACE_MASTER_TIMEOUT\020\360\310\2240\022 \n\031ERR_INTERFA"
      "CE_SUB_TIMEOUT\020\361\310\2240\022\030\n\021ERR_INTERFACE_END"
      "\020\317\311\2240\022\031\n\022ERR_BUSINESS_BEGIN\020\250\316\2240\022!\n\032ERR_"
      "PROBER_SERVICE_TIMEOUT\020\251\316\2240\022\034\n\025ERR_PROBE"
      "R_SERVICE_ID\020\252\316\2240\022\"\n\033ERR_PROBER_CONF_JSO"
      "N_TO_MAP\020\253\316\2240\022#\n\034ERR_PROBER_CONF_LOAD_IP"
      "_INFO\020\254\316\2240\022\027\n\020ERR_BUSINESS_END\020\317\224\2250*7\n\005S"
      "tate\022\017\n\013STATE_BEGIN\020\000\022\r\n\tHEARTBEAT\020d\022\016\n\t"
      "INSERVICE\020\310\001*)\n\005Level\022\017\n\013LEVEL_BEGIN\020\000\022\017"
      "\n\nINIT_LEVEL\020\350\007b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2063);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "center.proto", &protobuf_RegisterTypes);
  ::common::protobuf_common_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_center_2eproto

const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor() {
  protobuf_center_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_center_2eproto::file_level_enum_descriptors[0];
}
bool ErrorCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 101000000:
    case 101000100:
    case 101000101:
    case 101000102:
    case 101000103:
    case 101000104:
    case 101000105:
    case 101000106:
    case 101000107:
    case 101000199:
    case 101000200:
    case 101000201:
    case 101000202:
    case 101000203:
    case 101000204:
    case 101000205:
    case 101000206:
    case 101000207:
    case 101000208:
    case 101000209:
    case 101000210:
    case 101000211:
    case 101000212:
    case 101000213:
    case 101000214:
    case 101000215:
    case 101000216:
    case 101000217:
    case 101000218:
    case 101000299:
    case 101000300:
    case 101000301:
    case 101000302:
    case 101000303:
    case 101000304:
    case 101000305:
    case 101000399:
    case 101001000:
    case 101001001:
    case 101001002:
    case 101001003:
    case 101001004:
    case 101009999:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* State_descriptor() {
  protobuf_center_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_center_2eproto::file_level_enum_descriptors[1];
}
bool State_IsValid(int value) {
  switch (value) {
    case 0:
    case 100:
    case 200:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Level_descriptor() {
  protobuf_center_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_center_2eproto::file_level_enum_descriptors[2];
}
bool Level_IsValid(int value) {
  switch (value) {
    case 0:
    case 1000:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CenterMsg::kTestReqFieldNumber;
const int CenterMsg::kTestRspFieldNumber;
const int CenterMsg::kHeartbeatReqFieldNumber;
const int CenterMsg::kHeartbeatRspFieldNumber;
const int CenterMsg::kSyncServiceReqFieldNumber;
const int CenterMsg::kSyncServiceRspFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CenterMsg::CenterMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_center_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:center.CenterMsg)
}
CenterMsg::CenterMsg(const CenterMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_choice();
  switch (from.choice_case()) {
    case kTestReq: {
      mutable_test_req()->::common::TestReq::MergeFrom(from.test_req());
      break;
    }
    case kTestRsp: {
      mutable_test_rsp()->::common::TestRsp::MergeFrom(from.test_rsp());
      break;
    }
    case kHeartbeatReq: {
      mutable_heartbeat_req()->::center::HeartbeatReq::MergeFrom(from.heartbeat_req());
      break;
    }
    case kHeartbeatRsp: {
      mutable_heartbeat_rsp()->::center::HeartbeatRsp::MergeFrom(from.heartbeat_rsp());
      break;
    }
    case kSyncServiceReq: {
      mutable_sync_service_req()->::center::SyncServiceReq::MergeFrom(from.sync_service_req());
      break;
    }
    case kSyncServiceRsp: {
      mutable_sync_service_rsp()->::center::SyncServiceRsp::MergeFrom(from.sync_service_rsp());
      break;
    }
    case CHOICE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:center.CenterMsg)
}

void CenterMsg::SharedCtor() {
  clear_has_choice();
  _cached_size_ = 0;
}

CenterMsg::~CenterMsg() {
  // @@protoc_insertion_point(destructor:center.CenterMsg)
  SharedDtor();
}

void CenterMsg::SharedDtor() {
  if (has_choice()) {
    clear_choice();
  }
}

void CenterMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CenterMsg::descriptor() {
  protobuf_center_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_center_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CenterMsg& CenterMsg::default_instance() {
  protobuf_center_2eproto::InitDefaults();
  return *internal_default_instance();
}

CenterMsg* CenterMsg::New(::google::protobuf::Arena* arena) const {
  CenterMsg* n = new CenterMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CenterMsg::clear_choice() {
// @@protoc_insertion_point(one_of_clear_start:center.CenterMsg)
  switch (choice_case()) {
    case kTestReq: {
      delete choice_.test_req_;
      break;
    }
    case kTestRsp: {
      delete choice_.test_rsp_;
      break;
    }
    case kHeartbeatReq: {
      delete choice_.heartbeat_req_;
      break;
    }
    case kHeartbeatRsp: {
      delete choice_.heartbeat_rsp_;
      break;
    }
    case kSyncServiceReq: {
      delete choice_.sync_service_req_;
      break;
    }
    case kSyncServiceRsp: {
      delete choice_.sync_service_rsp_;
      break;
    }
    case CHOICE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CHOICE_NOT_SET;
}


void CenterMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:center.CenterMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_choice();
  _internal_metadata_.Clear();
}

bool CenterMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:center.CenterMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.TestReq test_req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_test_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.TestRsp test_rsp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_test_rsp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .center.HeartbeatReq heartbeat_req = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_heartbeat_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .center.HeartbeatRsp heartbeat_rsp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_heartbeat_rsp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .center.SyncServiceReq sync_service_req = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sync_service_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .center.SyncServiceRsp sync_service_rsp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sync_service_rsp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:center.CenterMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:center.CenterMsg)
  return false;
#undef DO_
}

void CenterMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:center.CenterMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.TestReq test_req = 1;
  if (has_test_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *choice_.test_req_, output);
  }

  // .common.TestRsp test_rsp = 2;
  if (has_test_rsp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *choice_.test_rsp_, output);
  }

  // .center.HeartbeatReq heartbeat_req = 3;
  if (has_heartbeat_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *choice_.heartbeat_req_, output);
  }

  // .center.HeartbeatRsp heartbeat_rsp = 4;
  if (has_heartbeat_rsp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *choice_.heartbeat_rsp_, output);
  }

  // .center.SyncServiceReq sync_service_req = 5;
  if (has_sync_service_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *choice_.sync_service_req_, output);
  }

  // .center.SyncServiceRsp sync_service_rsp = 6;
  if (has_sync_service_rsp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *choice_.sync_service_rsp_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:center.CenterMsg)
}

::google::protobuf::uint8* CenterMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:center.CenterMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.TestReq test_req = 1;
  if (has_test_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *choice_.test_req_, deterministic, target);
  }

  // .common.TestRsp test_rsp = 2;
  if (has_test_rsp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *choice_.test_rsp_, deterministic, target);
  }

  // .center.HeartbeatReq heartbeat_req = 3;
  if (has_heartbeat_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *choice_.heartbeat_req_, deterministic, target);
  }

  // .center.HeartbeatRsp heartbeat_rsp = 4;
  if (has_heartbeat_rsp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *choice_.heartbeat_rsp_, deterministic, target);
  }

  // .center.SyncServiceReq sync_service_req = 5;
  if (has_sync_service_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *choice_.sync_service_req_, deterministic, target);
  }

  // .center.SyncServiceRsp sync_service_rsp = 6;
  if (has_sync_service_rsp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *choice_.sync_service_rsp_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:center.CenterMsg)
  return target;
}

size_t CenterMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:center.CenterMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (choice_case()) {
    // .common.TestReq test_req = 1;
    case kTestReq: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *choice_.test_req_);
      break;
    }
    // .common.TestRsp test_rsp = 2;
    case kTestRsp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *choice_.test_rsp_);
      break;
    }
    // .center.HeartbeatReq heartbeat_req = 3;
    case kHeartbeatReq: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *choice_.heartbeat_req_);
      break;
    }
    // .center.HeartbeatRsp heartbeat_rsp = 4;
    case kHeartbeatRsp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *choice_.heartbeat_rsp_);
      break;
    }
    // .center.SyncServiceReq sync_service_req = 5;
    case kSyncServiceReq: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *choice_.sync_service_req_);
      break;
    }
    // .center.SyncServiceRsp sync_service_rsp = 6;
    case kSyncServiceRsp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *choice_.sync_service_rsp_);
      break;
    }
    case CHOICE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CenterMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:center.CenterMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CenterMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CenterMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:center.CenterMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:center.CenterMsg)
    MergeFrom(*source);
  }
}

void CenterMsg::MergeFrom(const CenterMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:center.CenterMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.choice_case()) {
    case kTestReq: {
      mutable_test_req()->::common::TestReq::MergeFrom(from.test_req());
      break;
    }
    case kTestRsp: {
      mutable_test_rsp()->::common::TestRsp::MergeFrom(from.test_rsp());
      break;
    }
    case kHeartbeatReq: {
      mutable_heartbeat_req()->::center::HeartbeatReq::MergeFrom(from.heartbeat_req());
      break;
    }
    case kHeartbeatRsp: {
      mutable_heartbeat_rsp()->::center::HeartbeatRsp::MergeFrom(from.heartbeat_rsp());
      break;
    }
    case kSyncServiceReq: {
      mutable_sync_service_req()->::center::SyncServiceReq::MergeFrom(from.sync_service_req());
      break;
    }
    case kSyncServiceRsp: {
      mutable_sync_service_rsp()->::center::SyncServiceRsp::MergeFrom(from.sync_service_rsp());
      break;
    }
    case CHOICE_NOT_SET: {
      break;
    }
  }
}

void CenterMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:center.CenterMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CenterMsg::CopyFrom(const CenterMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:center.CenterMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CenterMsg::IsInitialized() const {
  return true;
}

void CenterMsg::Swap(CenterMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CenterMsg::InternalSwap(CenterMsg* other) {
  using std::swap;
  swap(choice_, other->choice_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CenterMsg::GetMetadata() const {
  protobuf_center_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_center_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CenterMsg

// .common.TestReq test_req = 1;
bool CenterMsg::has_test_req() const {
  return choice_case() == kTestReq;
}
void CenterMsg::set_has_test_req() {
  _oneof_case_[0] = kTestReq;
}
void CenterMsg::clear_test_req() {
  if (has_test_req()) {
    delete choice_.test_req_;
    clear_has_choice();
  }
}
 const ::common::TestReq& CenterMsg::test_req() const {
  // @@protoc_insertion_point(field_get:center.CenterMsg.test_req)
  return has_test_req()
      ? *choice_.test_req_
      : ::common::TestReq::default_instance();
}
::common::TestReq* CenterMsg::mutable_test_req() {
  if (!has_test_req()) {
    clear_choice();
    set_has_test_req();
    choice_.test_req_ = new ::common::TestReq;
  }
  // @@protoc_insertion_point(field_mutable:center.CenterMsg.test_req)
  return choice_.test_req_;
}
::common::TestReq* CenterMsg::release_test_req() {
  // @@protoc_insertion_point(field_release:center.CenterMsg.test_req)
  if (has_test_req()) {
    clear_has_choice();
    ::common::TestReq* temp = choice_.test_req_;
    choice_.test_req_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CenterMsg::set_allocated_test_req(::common::TestReq* test_req) {
  clear_choice();
  if (test_req) {
    set_has_test_req();
    choice_.test_req_ = test_req;
  }
  // @@protoc_insertion_point(field_set_allocated:center.CenterMsg.test_req)
}

// .common.TestRsp test_rsp = 2;
bool CenterMsg::has_test_rsp() const {
  return choice_case() == kTestRsp;
}
void CenterMsg::set_has_test_rsp() {
  _oneof_case_[0] = kTestRsp;
}
void CenterMsg::clear_test_rsp() {
  if (has_test_rsp()) {
    delete choice_.test_rsp_;
    clear_has_choice();
  }
}
 const ::common::TestRsp& CenterMsg::test_rsp() const {
  // @@protoc_insertion_point(field_get:center.CenterMsg.test_rsp)
  return has_test_rsp()
      ? *choice_.test_rsp_
      : ::common::TestRsp::default_instance();
}
::common::TestRsp* CenterMsg::mutable_test_rsp() {
  if (!has_test_rsp()) {
    clear_choice();
    set_has_test_rsp();
    choice_.test_rsp_ = new ::common::TestRsp;
  }
  // @@protoc_insertion_point(field_mutable:center.CenterMsg.test_rsp)
  return choice_.test_rsp_;
}
::common::TestRsp* CenterMsg::release_test_rsp() {
  // @@protoc_insertion_point(field_release:center.CenterMsg.test_rsp)
  if (has_test_rsp()) {
    clear_has_choice();
    ::common::TestRsp* temp = choice_.test_rsp_;
    choice_.test_rsp_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CenterMsg::set_allocated_test_rsp(::common::TestRsp* test_rsp) {
  clear_choice();
  if (test_rsp) {
    set_has_test_rsp();
    choice_.test_rsp_ = test_rsp;
  }
  // @@protoc_insertion_point(field_set_allocated:center.CenterMsg.test_rsp)
}

// .center.HeartbeatReq heartbeat_req = 3;
bool CenterMsg::has_heartbeat_req() const {
  return choice_case() == kHeartbeatReq;
}
void CenterMsg::set_has_heartbeat_req() {
  _oneof_case_[0] = kHeartbeatReq;
}
void CenterMsg::clear_heartbeat_req() {
  if (has_heartbeat_req()) {
    delete choice_.heartbeat_req_;
    clear_has_choice();
  }
}
 const ::center::HeartbeatReq& CenterMsg::heartbeat_req() const {
  // @@protoc_insertion_point(field_get:center.CenterMsg.heartbeat_req)
  return has_heartbeat_req()
      ? *choice_.heartbeat_req_
      : ::center::HeartbeatReq::default_instance();
}
::center::HeartbeatReq* CenterMsg::mutable_heartbeat_req() {
  if (!has_heartbeat_req()) {
    clear_choice();
    set_has_heartbeat_req();
    choice_.heartbeat_req_ = new ::center::HeartbeatReq;
  }
  // @@protoc_insertion_point(field_mutable:center.CenterMsg.heartbeat_req)
  return choice_.heartbeat_req_;
}
::center::HeartbeatReq* CenterMsg::release_heartbeat_req() {
  // @@protoc_insertion_point(field_release:center.CenterMsg.heartbeat_req)
  if (has_heartbeat_req()) {
    clear_has_choice();
    ::center::HeartbeatReq* temp = choice_.heartbeat_req_;
    choice_.heartbeat_req_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CenterMsg::set_allocated_heartbeat_req(::center::HeartbeatReq* heartbeat_req) {
  clear_choice();
  if (heartbeat_req) {
    set_has_heartbeat_req();
    choice_.heartbeat_req_ = heartbeat_req;
  }
  // @@protoc_insertion_point(field_set_allocated:center.CenterMsg.heartbeat_req)
}

// .center.HeartbeatRsp heartbeat_rsp = 4;
bool CenterMsg::has_heartbeat_rsp() const {
  return choice_case() == kHeartbeatRsp;
}
void CenterMsg::set_has_heartbeat_rsp() {
  _oneof_case_[0] = kHeartbeatRsp;
}
void CenterMsg::clear_heartbeat_rsp() {
  if (has_heartbeat_rsp()) {
    delete choice_.heartbeat_rsp_;
    clear_has_choice();
  }
}
 const ::center::HeartbeatRsp& CenterMsg::heartbeat_rsp() const {
  // @@protoc_insertion_point(field_get:center.CenterMsg.heartbeat_rsp)
  return has_heartbeat_rsp()
      ? *choice_.heartbeat_rsp_
      : ::center::HeartbeatRsp::default_instance();
}
::center::HeartbeatRsp* CenterMsg::mutable_heartbeat_rsp() {
  if (!has_heartbeat_rsp()) {
    clear_choice();
    set_has_heartbeat_rsp();
    choice_.heartbeat_rsp_ = new ::center::HeartbeatRsp;
  }
  // @@protoc_insertion_point(field_mutable:center.CenterMsg.heartbeat_rsp)
  return choice_.heartbeat_rsp_;
}
::center::HeartbeatRsp* CenterMsg::release_heartbeat_rsp() {
  // @@protoc_insertion_point(field_release:center.CenterMsg.heartbeat_rsp)
  if (has_heartbeat_rsp()) {
    clear_has_choice();
    ::center::HeartbeatRsp* temp = choice_.heartbeat_rsp_;
    choice_.heartbeat_rsp_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CenterMsg::set_allocated_heartbeat_rsp(::center::HeartbeatRsp* heartbeat_rsp) {
  clear_choice();
  if (heartbeat_rsp) {
    set_has_heartbeat_rsp();
    choice_.heartbeat_rsp_ = heartbeat_rsp;
  }
  // @@protoc_insertion_point(field_set_allocated:center.CenterMsg.heartbeat_rsp)
}

// .center.SyncServiceReq sync_service_req = 5;
bool CenterMsg::has_sync_service_req() const {
  return choice_case() == kSyncServiceReq;
}
void CenterMsg::set_has_sync_service_req() {
  _oneof_case_[0] = kSyncServiceReq;
}
void CenterMsg::clear_sync_service_req() {
  if (has_sync_service_req()) {
    delete choice_.sync_service_req_;
    clear_has_choice();
  }
}
 const ::center::SyncServiceReq& CenterMsg::sync_service_req() const {
  // @@protoc_insertion_point(field_get:center.CenterMsg.sync_service_req)
  return has_sync_service_req()
      ? *choice_.sync_service_req_
      : ::center::SyncServiceReq::default_instance();
}
::center::SyncServiceReq* CenterMsg::mutable_sync_service_req() {
  if (!has_sync_service_req()) {
    clear_choice();
    set_has_sync_service_req();
    choice_.sync_service_req_ = new ::center::SyncServiceReq;
  }
  // @@protoc_insertion_point(field_mutable:center.CenterMsg.sync_service_req)
  return choice_.sync_service_req_;
}
::center::SyncServiceReq* CenterMsg::release_sync_service_req() {
  // @@protoc_insertion_point(field_release:center.CenterMsg.sync_service_req)
  if (has_sync_service_req()) {
    clear_has_choice();
    ::center::SyncServiceReq* temp = choice_.sync_service_req_;
    choice_.sync_service_req_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CenterMsg::set_allocated_sync_service_req(::center::SyncServiceReq* sync_service_req) {
  clear_choice();
  if (sync_service_req) {
    set_has_sync_service_req();
    choice_.sync_service_req_ = sync_service_req;
  }
  // @@protoc_insertion_point(field_set_allocated:center.CenterMsg.sync_service_req)
}

// .center.SyncServiceRsp sync_service_rsp = 6;
bool CenterMsg::has_sync_service_rsp() const {
  return choice_case() == kSyncServiceRsp;
}
void CenterMsg::set_has_sync_service_rsp() {
  _oneof_case_[0] = kSyncServiceRsp;
}
void CenterMsg::clear_sync_service_rsp() {
  if (has_sync_service_rsp()) {
    delete choice_.sync_service_rsp_;
    clear_has_choice();
  }
}
 const ::center::SyncServiceRsp& CenterMsg::sync_service_rsp() const {
  // @@protoc_insertion_point(field_get:center.CenterMsg.sync_service_rsp)
  return has_sync_service_rsp()
      ? *choice_.sync_service_rsp_
      : ::center::SyncServiceRsp::default_instance();
}
::center::SyncServiceRsp* CenterMsg::mutable_sync_service_rsp() {
  if (!has_sync_service_rsp()) {
    clear_choice();
    set_has_sync_service_rsp();
    choice_.sync_service_rsp_ = new ::center::SyncServiceRsp;
  }
  // @@protoc_insertion_point(field_mutable:center.CenterMsg.sync_service_rsp)
  return choice_.sync_service_rsp_;
}
::center::SyncServiceRsp* CenterMsg::release_sync_service_rsp() {
  // @@protoc_insertion_point(field_release:center.CenterMsg.sync_service_rsp)
  if (has_sync_service_rsp()) {
    clear_has_choice();
    ::center::SyncServiceRsp* temp = choice_.sync_service_rsp_;
    choice_.sync_service_rsp_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CenterMsg::set_allocated_sync_service_rsp(::center::SyncServiceRsp* sync_service_rsp) {
  clear_choice();
  if (sync_service_rsp) {
    set_has_sync_service_rsp();
    choice_.sync_service_rsp_ = sync_service_rsp;
  }
  // @@protoc_insertion_point(field_set_allocated:center.CenterMsg.sync_service_rsp)
}

bool CenterMsg::has_choice() const {
  return choice_case() != CHOICE_NOT_SET;
}
void CenterMsg::clear_has_choice() {
  _oneof_case_[0] = CHOICE_NOT_SET;
}
CenterMsg::ChoiceCase CenterMsg::choice_case() const {
  return CenterMsg::ChoiceCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeartbeatReq::kLevelFieldNumber;
const int HeartbeatReq::kServiceIdFieldNumber;
const int HeartbeatReq::kProcIdFieldNumber;
const int HeartbeatReq::kStateFieldNumber;
const int HeartbeatReq::kConfUpdateTimeFieldNumber;
const int HeartbeatReq::kConfJsonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartbeatReq::HeartbeatReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_center_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:center.HeartbeatReq)
}
HeartbeatReq::HeartbeatReq(const HeartbeatReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  conf_json_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.conf_json().size() > 0) {
    conf_json_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conf_json_);
  }
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&conf_update_time_) -
    reinterpret_cast<char*>(&level_)) + sizeof(conf_update_time_));
  // @@protoc_insertion_point(copy_constructor:center.HeartbeatReq)
}

void HeartbeatReq::SharedCtor() {
  conf_json_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&conf_update_time_) -
      reinterpret_cast<char*>(&level_)) + sizeof(conf_update_time_));
  _cached_size_ = 0;
}

HeartbeatReq::~HeartbeatReq() {
  // @@protoc_insertion_point(destructor:center.HeartbeatReq)
  SharedDtor();
}

void HeartbeatReq::SharedDtor() {
  conf_json_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HeartbeatReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartbeatReq::descriptor() {
  protobuf_center_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_center_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HeartbeatReq& HeartbeatReq::default_instance() {
  protobuf_center_2eproto::InitDefaults();
  return *internal_default_instance();
}

HeartbeatReq* HeartbeatReq::New(::google::protobuf::Arena* arena) const {
  HeartbeatReq* n = new HeartbeatReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeartbeatReq::Clear() {
// @@protoc_insertion_point(message_clear_start:center.HeartbeatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  conf_json_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&conf_update_time_) -
      reinterpret_cast<char*>(&level_)) + sizeof(conf_update_time_));
  _internal_metadata_.Clear();
}

bool HeartbeatReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:center.HeartbeatReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 service_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &service_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 proc_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proc_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 state = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 conf_update_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &conf_update_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes conf_json = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_conf_json()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:center.HeartbeatReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:center.HeartbeatReq)
  return false;
#undef DO_
}

void HeartbeatReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:center.HeartbeatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 level = 1;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }

  // int32 service_id = 2;
  if (this->service_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->service_id(), output);
  }

  // uint32 proc_id = 3;
  if (this->proc_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->proc_id(), output);
  }

  // uint32 state = 4;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->state(), output);
  }

  // uint64 conf_update_time = 5;
  if (this->conf_update_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->conf_update_time(), output);
  }

  // bytes conf_json = 6;
  if (this->conf_json().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->conf_json(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:center.HeartbeatReq)
}

::google::protobuf::uint8* HeartbeatReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:center.HeartbeatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 level = 1;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }

  // int32 service_id = 2;
  if (this->service_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->service_id(), target);
  }

  // uint32 proc_id = 3;
  if (this->proc_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->proc_id(), target);
  }

  // uint32 state = 4;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->state(), target);
  }

  // uint64 conf_update_time = 5;
  if (this->conf_update_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->conf_update_time(), target);
  }

  // bytes conf_json = 6;
  if (this->conf_json().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->conf_json(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:center.HeartbeatReq)
  return target;
}

size_t HeartbeatReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:center.HeartbeatReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes conf_json = 6;
  if (this->conf_json().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->conf_json());
  }

  // int32 level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // int32 service_id = 2;
  if (this->service_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->service_id());
  }

  // uint32 proc_id = 3;
  if (this->proc_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->proc_id());
  }

  // uint32 state = 4;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());
  }

  // uint64 conf_update_time = 5;
  if (this->conf_update_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->conf_update_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartbeatReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:center.HeartbeatReq)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartbeatReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartbeatReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:center.HeartbeatReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:center.HeartbeatReq)
    MergeFrom(*source);
  }
}

void HeartbeatReq::MergeFrom(const HeartbeatReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:center.HeartbeatReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.conf_json().size() > 0) {

    conf_json_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conf_json_);
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.service_id() != 0) {
    set_service_id(from.service_id());
  }
  if (from.proc_id() != 0) {
    set_proc_id(from.proc_id());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.conf_update_time() != 0) {
    set_conf_update_time(from.conf_update_time());
  }
}

void HeartbeatReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:center.HeartbeatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartbeatReq::CopyFrom(const HeartbeatReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:center.HeartbeatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartbeatReq::IsInitialized() const {
  return true;
}

void HeartbeatReq::Swap(HeartbeatReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartbeatReq::InternalSwap(HeartbeatReq* other) {
  using std::swap;
  conf_json_.Swap(&other->conf_json_);
  swap(level_, other->level_);
  swap(service_id_, other->service_id_);
  swap(proc_id_, other->proc_id_);
  swap(state_, other->state_);
  swap(conf_update_time_, other->conf_update_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeartbeatReq::GetMetadata() const {
  protobuf_center_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_center_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HeartbeatReq

// int32 level = 1;
void HeartbeatReq::clear_level() {
  level_ = 0;
}
::google::protobuf::int32 HeartbeatReq::level() const {
  // @@protoc_insertion_point(field_get:center.HeartbeatReq.level)
  return level_;
}
void HeartbeatReq::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:center.HeartbeatReq.level)
}

// int32 service_id = 2;
void HeartbeatReq::clear_service_id() {
  service_id_ = 0;
}
::google::protobuf::int32 HeartbeatReq::service_id() const {
  // @@protoc_insertion_point(field_get:center.HeartbeatReq.service_id)
  return service_id_;
}
void HeartbeatReq::set_service_id(::google::protobuf::int32 value) {
  
  service_id_ = value;
  // @@protoc_insertion_point(field_set:center.HeartbeatReq.service_id)
}

// uint32 proc_id = 3;
void HeartbeatReq::clear_proc_id() {
  proc_id_ = 0u;
}
::google::protobuf::uint32 HeartbeatReq::proc_id() const {
  // @@protoc_insertion_point(field_get:center.HeartbeatReq.proc_id)
  return proc_id_;
}
void HeartbeatReq::set_proc_id(::google::protobuf::uint32 value) {
  
  proc_id_ = value;
  // @@protoc_insertion_point(field_set:center.HeartbeatReq.proc_id)
}

// uint32 state = 4;
void HeartbeatReq::clear_state() {
  state_ = 0u;
}
::google::protobuf::uint32 HeartbeatReq::state() const {
  // @@protoc_insertion_point(field_get:center.HeartbeatReq.state)
  return state_;
}
void HeartbeatReq::set_state(::google::protobuf::uint32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:center.HeartbeatReq.state)
}

// uint64 conf_update_time = 5;
void HeartbeatReq::clear_conf_update_time() {
  conf_update_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 HeartbeatReq::conf_update_time() const {
  // @@protoc_insertion_point(field_get:center.HeartbeatReq.conf_update_time)
  return conf_update_time_;
}
void HeartbeatReq::set_conf_update_time(::google::protobuf::uint64 value) {
  
  conf_update_time_ = value;
  // @@protoc_insertion_point(field_set:center.HeartbeatReq.conf_update_time)
}

// bytes conf_json = 6;
void HeartbeatReq::clear_conf_json() {
  conf_json_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HeartbeatReq::conf_json() const {
  // @@protoc_insertion_point(field_get:center.HeartbeatReq.conf_json)
  return conf_json_.GetNoArena();
}
void HeartbeatReq::set_conf_json(const ::std::string& value) {
  
  conf_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:center.HeartbeatReq.conf_json)
}
#if LANG_CXX11
void HeartbeatReq::set_conf_json(::std::string&& value) {
  
  conf_json_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:center.HeartbeatReq.conf_json)
}
#endif
void HeartbeatReq::set_conf_json(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  conf_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:center.HeartbeatReq.conf_json)
}
void HeartbeatReq::set_conf_json(const void* value, size_t size) {
  
  conf_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:center.HeartbeatReq.conf_json)
}
::std::string* HeartbeatReq::mutable_conf_json() {
  
  // @@protoc_insertion_point(field_mutable:center.HeartbeatReq.conf_json)
  return conf_json_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HeartbeatReq::release_conf_json() {
  // @@protoc_insertion_point(field_release:center.HeartbeatReq.conf_json)
  
  return conf_json_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HeartbeatReq::set_allocated_conf_json(::std::string* conf_json) {
  if (conf_json != NULL) {
    
  } else {
    
  }
  conf_json_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), conf_json);
  // @@protoc_insertion_point(field_set_allocated:center.HeartbeatReq.conf_json)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeartbeatRsp::kLevelFieldNumber;
const int HeartbeatRsp::kServiceIdFieldNumber;
const int HeartbeatRsp::kProcIdFieldNumber;
const int HeartbeatRsp::kConfUpdateTimeFieldNumber;
const int HeartbeatRsp::kExpireSecondFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartbeatRsp::HeartbeatRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_center_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:center.HeartbeatRsp)
}
HeartbeatRsp::HeartbeatRsp(const HeartbeatRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&expire_second_) -
    reinterpret_cast<char*>(&level_)) + sizeof(expire_second_));
  // @@protoc_insertion_point(copy_constructor:center.HeartbeatRsp)
}

void HeartbeatRsp::SharedCtor() {
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expire_second_) -
      reinterpret_cast<char*>(&level_)) + sizeof(expire_second_));
  _cached_size_ = 0;
}

HeartbeatRsp::~HeartbeatRsp() {
  // @@protoc_insertion_point(destructor:center.HeartbeatRsp)
  SharedDtor();
}

void HeartbeatRsp::SharedDtor() {
}

void HeartbeatRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartbeatRsp::descriptor() {
  protobuf_center_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_center_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HeartbeatRsp& HeartbeatRsp::default_instance() {
  protobuf_center_2eproto::InitDefaults();
  return *internal_default_instance();
}

HeartbeatRsp* HeartbeatRsp::New(::google::protobuf::Arena* arena) const {
  HeartbeatRsp* n = new HeartbeatRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeartbeatRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:center.HeartbeatRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expire_second_) -
      reinterpret_cast<char*>(&level_)) + sizeof(expire_second_));
  _internal_metadata_.Clear();
}

bool HeartbeatRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:center.HeartbeatRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 service_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &service_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 proc_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proc_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 conf_update_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &conf_update_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 expire_second = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &expire_second_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:center.HeartbeatRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:center.HeartbeatRsp)
  return false;
#undef DO_
}

void HeartbeatRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:center.HeartbeatRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 level = 1;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }

  // int32 service_id = 2;
  if (this->service_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->service_id(), output);
  }

  // uint32 proc_id = 3;
  if (this->proc_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->proc_id(), output);
  }

  // uint64 conf_update_time = 4;
  if (this->conf_update_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->conf_update_time(), output);
  }

  // uint32 expire_second = 5;
  if (this->expire_second() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->expire_second(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:center.HeartbeatRsp)
}

::google::protobuf::uint8* HeartbeatRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:center.HeartbeatRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 level = 1;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }

  // int32 service_id = 2;
  if (this->service_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->service_id(), target);
  }

  // uint32 proc_id = 3;
  if (this->proc_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->proc_id(), target);
  }

  // uint64 conf_update_time = 4;
  if (this->conf_update_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->conf_update_time(), target);
  }

  // uint32 expire_second = 5;
  if (this->expire_second() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->expire_second(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:center.HeartbeatRsp)
  return target;
}

size_t HeartbeatRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:center.HeartbeatRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // int32 service_id = 2;
  if (this->service_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->service_id());
  }

  // uint64 conf_update_time = 4;
  if (this->conf_update_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->conf_update_time());
  }

  // uint32 proc_id = 3;
  if (this->proc_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->proc_id());
  }

  // uint32 expire_second = 5;
  if (this->expire_second() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->expire_second());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartbeatRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:center.HeartbeatRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartbeatRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartbeatRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:center.HeartbeatRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:center.HeartbeatRsp)
    MergeFrom(*source);
  }
}

void HeartbeatRsp::MergeFrom(const HeartbeatRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:center.HeartbeatRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.service_id() != 0) {
    set_service_id(from.service_id());
  }
  if (from.conf_update_time() != 0) {
    set_conf_update_time(from.conf_update_time());
  }
  if (from.proc_id() != 0) {
    set_proc_id(from.proc_id());
  }
  if (from.expire_second() != 0) {
    set_expire_second(from.expire_second());
  }
}

void HeartbeatRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:center.HeartbeatRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartbeatRsp::CopyFrom(const HeartbeatRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:center.HeartbeatRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartbeatRsp::IsInitialized() const {
  return true;
}

void HeartbeatRsp::Swap(HeartbeatRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartbeatRsp::InternalSwap(HeartbeatRsp* other) {
  using std::swap;
  swap(level_, other->level_);
  swap(service_id_, other->service_id_);
  swap(conf_update_time_, other->conf_update_time_);
  swap(proc_id_, other->proc_id_);
  swap(expire_second_, other->expire_second_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeartbeatRsp::GetMetadata() const {
  protobuf_center_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_center_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HeartbeatRsp

// int32 level = 1;
void HeartbeatRsp::clear_level() {
  level_ = 0;
}
::google::protobuf::int32 HeartbeatRsp::level() const {
  // @@protoc_insertion_point(field_get:center.HeartbeatRsp.level)
  return level_;
}
void HeartbeatRsp::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:center.HeartbeatRsp.level)
}

// int32 service_id = 2;
void HeartbeatRsp::clear_service_id() {
  service_id_ = 0;
}
::google::protobuf::int32 HeartbeatRsp::service_id() const {
  // @@protoc_insertion_point(field_get:center.HeartbeatRsp.service_id)
  return service_id_;
}
void HeartbeatRsp::set_service_id(::google::protobuf::int32 value) {
  
  service_id_ = value;
  // @@protoc_insertion_point(field_set:center.HeartbeatRsp.service_id)
}

// uint32 proc_id = 3;
void HeartbeatRsp::clear_proc_id() {
  proc_id_ = 0u;
}
::google::protobuf::uint32 HeartbeatRsp::proc_id() const {
  // @@protoc_insertion_point(field_get:center.HeartbeatRsp.proc_id)
  return proc_id_;
}
void HeartbeatRsp::set_proc_id(::google::protobuf::uint32 value) {
  
  proc_id_ = value;
  // @@protoc_insertion_point(field_set:center.HeartbeatRsp.proc_id)
}

// uint64 conf_update_time = 4;
void HeartbeatRsp::clear_conf_update_time() {
  conf_update_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 HeartbeatRsp::conf_update_time() const {
  // @@protoc_insertion_point(field_get:center.HeartbeatRsp.conf_update_time)
  return conf_update_time_;
}
void HeartbeatRsp::set_conf_update_time(::google::protobuf::uint64 value) {
  
  conf_update_time_ = value;
  // @@protoc_insertion_point(field_set:center.HeartbeatRsp.conf_update_time)
}

// uint32 expire_second = 5;
void HeartbeatRsp::clear_expire_second() {
  expire_second_ = 0u;
}
::google::protobuf::uint32 HeartbeatRsp::expire_second() const {
  // @@protoc_insertion_point(field_get:center.HeartbeatRsp.expire_second)
  return expire_second_;
}
void HeartbeatRsp::set_expire_second(::google::protobuf::uint32 value) {
  
  expire_second_ = value;
  // @@protoc_insertion_point(field_set:center.HeartbeatRsp.expire_second)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncServiceReq::kConfUpdateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncServiceReq::SyncServiceReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_center_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:center.SyncServiceReq)
}
SyncServiceReq::SyncServiceReq(const SyncServiceReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  conf_update_time_ = from.conf_update_time_;
  // @@protoc_insertion_point(copy_constructor:center.SyncServiceReq)
}

void SyncServiceReq::SharedCtor() {
  conf_update_time_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

SyncServiceReq::~SyncServiceReq() {
  // @@protoc_insertion_point(destructor:center.SyncServiceReq)
  SharedDtor();
}

void SyncServiceReq::SharedDtor() {
}

void SyncServiceReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncServiceReq::descriptor() {
  protobuf_center_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_center_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncServiceReq& SyncServiceReq::default_instance() {
  protobuf_center_2eproto::InitDefaults();
  return *internal_default_instance();
}

SyncServiceReq* SyncServiceReq::New(::google::protobuf::Arena* arena) const {
  SyncServiceReq* n = new SyncServiceReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncServiceReq::Clear() {
// @@protoc_insertion_point(message_clear_start:center.SyncServiceReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  conf_update_time_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool SyncServiceReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:center.SyncServiceReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 conf_update_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &conf_update_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:center.SyncServiceReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:center.SyncServiceReq)
  return false;
#undef DO_
}

void SyncServiceReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:center.SyncServiceReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 conf_update_time = 1;
  if (this->conf_update_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->conf_update_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:center.SyncServiceReq)
}

::google::protobuf::uint8* SyncServiceReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:center.SyncServiceReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 conf_update_time = 1;
  if (this->conf_update_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->conf_update_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:center.SyncServiceReq)
  return target;
}

size_t SyncServiceReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:center.SyncServiceReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 conf_update_time = 1;
  if (this->conf_update_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->conf_update_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncServiceReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:center.SyncServiceReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncServiceReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncServiceReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:center.SyncServiceReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:center.SyncServiceReq)
    MergeFrom(*source);
  }
}

void SyncServiceReq::MergeFrom(const SyncServiceReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:center.SyncServiceReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.conf_update_time() != 0) {
    set_conf_update_time(from.conf_update_time());
  }
}

void SyncServiceReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:center.SyncServiceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncServiceReq::CopyFrom(const SyncServiceReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:center.SyncServiceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncServiceReq::IsInitialized() const {
  return true;
}

void SyncServiceReq::Swap(SyncServiceReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncServiceReq::InternalSwap(SyncServiceReq* other) {
  using std::swap;
  swap(conf_update_time_, other->conf_update_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncServiceReq::GetMetadata() const {
  protobuf_center_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_center_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SyncServiceReq

// uint64 conf_update_time = 1;
void SyncServiceReq::clear_conf_update_time() {
  conf_update_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SyncServiceReq::conf_update_time() const {
  // @@protoc_insertion_point(field_get:center.SyncServiceReq.conf_update_time)
  return conf_update_time_;
}
void SyncServiceReq::set_conf_update_time(::google::protobuf::uint64 value) {
  
  conf_update_time_ = value;
  // @@protoc_insertion_point(field_set:center.SyncServiceReq.conf_update_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncServiceRsp::kConfUpdateTimeFieldNumber;
const int SyncServiceRsp::kConfJsonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncServiceRsp::SyncServiceRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_center_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:center.SyncServiceRsp)
}
SyncServiceRsp::SyncServiceRsp(const SyncServiceRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  conf_json_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.conf_json().size() > 0) {
    conf_json_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conf_json_);
  }
  conf_update_time_ = from.conf_update_time_;
  // @@protoc_insertion_point(copy_constructor:center.SyncServiceRsp)
}

void SyncServiceRsp::SharedCtor() {
  conf_json_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  conf_update_time_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

SyncServiceRsp::~SyncServiceRsp() {
  // @@protoc_insertion_point(destructor:center.SyncServiceRsp)
  SharedDtor();
}

void SyncServiceRsp::SharedDtor() {
  conf_json_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SyncServiceRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncServiceRsp::descriptor() {
  protobuf_center_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_center_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncServiceRsp& SyncServiceRsp::default_instance() {
  protobuf_center_2eproto::InitDefaults();
  return *internal_default_instance();
}

SyncServiceRsp* SyncServiceRsp::New(::google::protobuf::Arena* arena) const {
  SyncServiceRsp* n = new SyncServiceRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncServiceRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:center.SyncServiceRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  conf_json_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  conf_update_time_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool SyncServiceRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:center.SyncServiceRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 conf_update_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &conf_update_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes conf_json = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_conf_json()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:center.SyncServiceRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:center.SyncServiceRsp)
  return false;
#undef DO_
}

void SyncServiceRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:center.SyncServiceRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 conf_update_time = 1;
  if (this->conf_update_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->conf_update_time(), output);
  }

  // bytes conf_json = 2;
  if (this->conf_json().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->conf_json(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:center.SyncServiceRsp)
}

::google::protobuf::uint8* SyncServiceRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:center.SyncServiceRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 conf_update_time = 1;
  if (this->conf_update_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->conf_update_time(), target);
  }

  // bytes conf_json = 2;
  if (this->conf_json().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->conf_json(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:center.SyncServiceRsp)
  return target;
}

size_t SyncServiceRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:center.SyncServiceRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes conf_json = 2;
  if (this->conf_json().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->conf_json());
  }

  // uint64 conf_update_time = 1;
  if (this->conf_update_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->conf_update_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncServiceRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:center.SyncServiceRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncServiceRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncServiceRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:center.SyncServiceRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:center.SyncServiceRsp)
    MergeFrom(*source);
  }
}

void SyncServiceRsp::MergeFrom(const SyncServiceRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:center.SyncServiceRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.conf_json().size() > 0) {

    conf_json_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conf_json_);
  }
  if (from.conf_update_time() != 0) {
    set_conf_update_time(from.conf_update_time());
  }
}

void SyncServiceRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:center.SyncServiceRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncServiceRsp::CopyFrom(const SyncServiceRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:center.SyncServiceRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncServiceRsp::IsInitialized() const {
  return true;
}

void SyncServiceRsp::Swap(SyncServiceRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncServiceRsp::InternalSwap(SyncServiceRsp* other) {
  using std::swap;
  conf_json_.Swap(&other->conf_json_);
  swap(conf_update_time_, other->conf_update_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncServiceRsp::GetMetadata() const {
  protobuf_center_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_center_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SyncServiceRsp

// uint64 conf_update_time = 1;
void SyncServiceRsp::clear_conf_update_time() {
  conf_update_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SyncServiceRsp::conf_update_time() const {
  // @@protoc_insertion_point(field_get:center.SyncServiceRsp.conf_update_time)
  return conf_update_time_;
}
void SyncServiceRsp::set_conf_update_time(::google::protobuf::uint64 value) {
  
  conf_update_time_ = value;
  // @@protoc_insertion_point(field_set:center.SyncServiceRsp.conf_update_time)
}

// bytes conf_json = 2;
void SyncServiceRsp::clear_conf_json() {
  conf_json_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SyncServiceRsp::conf_json() const {
  // @@protoc_insertion_point(field_get:center.SyncServiceRsp.conf_json)
  return conf_json_.GetNoArena();
}
void SyncServiceRsp::set_conf_json(const ::std::string& value) {
  
  conf_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:center.SyncServiceRsp.conf_json)
}
#if LANG_CXX11
void SyncServiceRsp::set_conf_json(::std::string&& value) {
  
  conf_json_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:center.SyncServiceRsp.conf_json)
}
#endif
void SyncServiceRsp::set_conf_json(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  conf_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:center.SyncServiceRsp.conf_json)
}
void SyncServiceRsp::set_conf_json(const void* value, size_t size) {
  
  conf_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:center.SyncServiceRsp.conf_json)
}
::std::string* SyncServiceRsp::mutable_conf_json() {
  
  // @@protoc_insertion_point(field_mutable:center.SyncServiceRsp.conf_json)
  return conf_json_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SyncServiceRsp::release_conf_json() {
  // @@protoc_insertion_point(field_release:center.SyncServiceRsp.conf_json)
  
  return conf_json_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SyncServiceRsp::set_allocated_conf_json(::std::string* conf_json) {
  if (conf_json != NULL) {
    
  } else {
    
  }
  conf_json_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), conf_json);
  // @@protoc_insertion_point(field_set_allocated:center.SyncServiceRsp.conf_json)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace center

// @@protoc_insertion_point(global_scope)

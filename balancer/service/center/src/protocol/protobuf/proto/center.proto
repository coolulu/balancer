syntax="proto3";

package center;

enum ErrorCode {
    SUCCESS                         = 0;

    ERR_BEGIN                       = 1010000000;

    // 系统错误码
    ERR_SYS_BEGIN                   = 1010000100;
    ERR_SYS_OVERLOAD                = 1010000101;       // 服务过载
    ERR_SYS_REJECT_SERVICE          = 1010000102;       // 拒绝服务
    ERR_SYS_SERVER_INNER            = 1010000103;       // 服务内部错误
    ERR_SYS_TIMEOUT                 = 1010000104;       // 超时错误
    ERR_SYS_NO_INSERVICE_LIST       = 1010000105;       // 没有可用服务ip
    ERR_SYS_TASK_STATE              = 1010000106;       // 任务状态错误
    ERR_SYS_TASK_DISCARD            = 1010000107;       // 任务丢弃
    ERR_SYS_END                     = 1010000199;

    // 数据包错误码
    ERR_PACKET_BEGIN                = 1010000200;
    ERR_PACKET_ENCODE               = 1010000201;          // 打包失败
    ERR_PACKET_DECODE               = 1010000202;          // 解码失败
    ERR_PACKET_HEADER               = 1010000203;
    ERR_PACKET_LEN                  = 1010000204;
    ERR_PACKET_VERSION              = 1010000205;
    ERR_PACKET_FROM_SERVICE_ID      = 1010000206;
    ERR_PACKET_TO_SERVICE_ID        = 1010000207;
    ERR_PACKET_APP_ID               = 1010000208;
    ERR_PACKET_APP_VERSION          = 1010000209;
    ERR_PACKET_CONN_SEQ_ID          = 1010000210;
    ERR_PACKET_MSG_SEQ_ID           = 1010000211;
    ERR_PACKET_DATA_FORMAT          = 1010000212;
    ERR_PACKET_DATA_FIELD_0         = 1010000213;
    ERR_PACKET_DATA_FIELD_1         = 1010000214;
    ERR_PACKET_DATA_FIELD_2         = 1010000215;
    ERR_PACKET_DATA_FIELD_3         = 1010000216;
    ERR_PACKET_CHECK_SUM            = 1010000217;
    ERR_PACKET_UNKNOWN_REQUEST      = 1010000218;          // 不明请求
    ERR_PACKET_END                  = 1010000299;

    // 接口错误码
    ERR_INTERFACE_BEGIN             = 1010000300;
    ERR_INTERFACE_PARAM             = 1010000301;       // 参数错误
    ERR_INTERFACE_PERM              = 1010000302;       // 权限错误
    ERR_INTERFACE_END               = 1010000399;

    // 业务错误码
    ERR_BUSINESS_BEGIN              = 1010010000;
    ERR_PROBER_SERVICE_TIMEOUT      = 1010010001;       // 探测服务超时
    ERR_PROBER_SERVICE_ID           = 1010010002;       // 探测service_id错误
    ERR_PROBER_CONF_JSON_TO_MAP     = 1010010003;       // 探测下发配置json_to_map错误
    ERR_PROBER_CONF_LOAD_IP_INFO    = 1010010004;       // 探测下发配置load_ip_info错误

    ERR_END                         = 1010099999;
}

message TestReq {
    int32   service_id        = 1;
}

message TestRsp {
    bytes   service_name      = 1;
}

enum State {
    STATE_BEGIN     = 0;
    HEARTBEAT       = 100;      // 上架
    INSERVICE       = 200;      // 上线
}

enum Level {
    LEVEL_BEGIN     = 0;
    INIT_LEVEL      = 1000;     // 初始等级(最低等级)
}

message HeartbeatReq {
    int32      level               = 1;     // center的等级
    int32      service_id          = 2;
    uint32     proc_id             = 3;
    uint32     state               = 4;     // 目标进程状态(State):1.上架, 2.上线
    uint64     conf_update_time    = 5;     // 配置更新时间(微妙)
    bytes      conf_json           = 6;     // 有配置更新下发json，无配置更新下发空字符串
}

message HeartbeatRsp {
    int32      level               = 1;     // 接管center的等级
    int32      service_id          = 2;     // 返回和HeartbeatReq.service_id的值一样
    int32      proc_id             = 3;     // 返回和HeartbeatReq.proc_id的值一样
    uint64     conf_update_time    = 4;     // 配置更新时间(微妙)
    uint32     expire_second       = 5;     // 接管center的到期秒数，
                                            // 服务当前时间和接管center最新心跳请求时间相减秒数，
                                            // 非接管center根据expire_second判断是否需要接管服务
}

message CenterMsg {                         // 奇数是请求，偶数是响应
    oneof choice {
        //测试
        TestReq         test_req        = 1;        // 请求
        TestRsp         test_rsp        = 2;        // 响应

        //心跳探测
        HeartbeatReq    Heartbeat_req   = 3;
        HeartbeatRsp    Heartbeat_rsp   = 4;
    }
}
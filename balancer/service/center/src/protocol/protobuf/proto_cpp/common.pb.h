// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#ifndef PROTOBUF_common_2eproto__INCLUDED
#define PROTOBUF_common_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace common {
class UserId;
class UserIdDefaultTypeInternal;
extern UserIdDefaultTypeInternal _UserId_default_instance_;
class UserIdList;
class UserIdListDefaultTypeInternal;
extern UserIdListDefaultTypeInternal _UserIdList_default_instance_;
class UserInfo;
class UserInfoDefaultTypeInternal;
extern UserInfoDefaultTypeInternal _UserInfo_default_instance_;
class UserInfoList;
class UserInfoListDefaultTypeInternal;
extern UserInfoListDefaultTypeInternal _UserInfoList_default_instance_;
}  // namespace common

namespace common {

namespace protobuf_common_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_common_2eproto

enum ErrorCode {
  SUCCESS = 0,
  ERR_SYS_BEGIN = 100,
  ERR_SYS_OVERLOAD = 101,
  ERR_SYS_REJECT_SERVICE = 102,
  ERR_SYS_SERVER_INNER = 103,
  ERR_SYS_TIMEOUT = 104,
  ERR_SYS_NO_INSERVICE_LIST = 105,
  ERR_SYS_TASK_STATE = 106,
  ERR_SYS_TASK_DISCARD = 107,
  ERR_SYS_END = 199,
  ERR_PACKET_BEGIN = 200,
  ERR_PACKET_ENCODE = 201,
  ERR_PACKET_DECODE = 202,
  ERR_PACKET_HEADER = 203,
  ERR_PACKET_LEN = 204,
  ERR_PACKET_VERSION = 205,
  ERR_PACKET_FROM_SERVICE_ID = 206,
  ERR_PACKET_TO_SERVICE_ID = 207,
  ERR_PACKET_APP_ID = 208,
  ERR_PACKET_APP_VERSION = 209,
  ERR_PACKET_CONN_SEQ_ID = 210,
  ERR_PACKET_MSG_SEQ_ID = 211,
  ERR_PACKET_DATA_FORMAT = 212,
  ERR_PACKET_DATA_FIELD_0 = 213,
  ERR_PACKET_DATA_FIELD_1 = 214,
  ERR_PACKET_DATA_FIELD_2 = 215,
  ERR_PACKET_DATA_FIELD_3 = 216,
  ERR_PACKET_CHECK_SUM = 217,
  ERR_PACKET_UNKNOWN_REQUEST = 218,
  ERR_PACKET_END = 299,
  ERR_INTERFACE_BEGIN = 300,
  ERR_INTERFACE_PARAM = 301,
  ERR_INTERFACE_PERM = 302,
  ERR_INTERFACE_END = 399,
  ERR_BUSINESS_BEGIN = 10000,
  ERR_BUSINESS_END = 99999,
  ErrorCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ErrorCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ErrorCode_IsValid(int value);
const ErrorCode ErrorCode_MIN = SUCCESS;
const ErrorCode ErrorCode_MAX = ERR_BUSINESS_END;
const int ErrorCode_ARRAYSIZE = ErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor();
inline const ::std::string& ErrorCode_Name(ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ErrorCode_descriptor(), value);
}
inline bool ErrorCode_Parse(
    const ::std::string& name, ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ErrorCode>(
    ErrorCode_descriptor(), name, value);
}
// ===================================================================

class UserId : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common.UserId) */ {
 public:
  UserId();
  virtual ~UserId();

  UserId(const UserId& from);

  inline UserId& operator=(const UserId& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserId(UserId&& from) noexcept
    : UserId() {
    *this = ::std::move(from);
  }

  inline UserId& operator=(UserId&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserId& default_instance();

  static inline const UserId* internal_default_instance() {
    return reinterpret_cast<const UserId*>(
               &_UserId_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(UserId* other);
  friend void swap(UserId& a, UserId& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserId* New() const PROTOBUF_FINAL { return New(NULL); }

  UserId* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserId& from);
  void MergeFrom(const UserId& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserId* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:common.UserId)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 user_id_;
  mutable int _cached_size_;
  friend struct protobuf_common_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserIdList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common.UserIdList) */ {
 public:
  UserIdList();
  virtual ~UserIdList();

  UserIdList(const UserIdList& from);

  inline UserIdList& operator=(const UserIdList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserIdList(UserIdList&& from) noexcept
    : UserIdList() {
    *this = ::std::move(from);
  }

  inline UserIdList& operator=(UserIdList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserIdList& default_instance();

  static inline const UserIdList* internal_default_instance() {
    return reinterpret_cast<const UserIdList*>(
               &_UserIdList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(UserIdList* other);
  friend void swap(UserIdList& a, UserIdList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserIdList* New() const PROTOBUF_FINAL { return New(NULL); }

  UserIdList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserIdList& from);
  void MergeFrom(const UserIdList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserIdList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .common.UserId list = 2;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 2;
  const ::common::UserId& list(int index) const;
  ::common::UserId* mutable_list(int index);
  ::common::UserId* add_list();
  ::google::protobuf::RepeatedPtrField< ::common::UserId >*
      mutable_list();
  const ::google::protobuf::RepeatedPtrField< ::common::UserId >&
      list() const;

  // @@protoc_insertion_point(class_scope:common.UserIdList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::common::UserId > list_;
  mutable int _cached_size_;
  friend struct protobuf_common_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common.UserInfo) */ {
 public:
  UserInfo();
  virtual ~UserInfo();

  UserInfo(const UserInfo& from);

  inline UserInfo& operator=(const UserInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserInfo(UserInfo&& from) noexcept
    : UserInfo() {
    *this = ::std::move(from);
  }

  inline UserInfo& operator=(UserInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserInfo& default_instance();

  static inline const UserInfo* internal_default_instance() {
    return reinterpret_cast<const UserInfo*>(
               &_UserInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(UserInfo* other);
  friend void swap(UserInfo& a, UserInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  UserInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserInfo& from);
  void MergeFrom(const UserInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:common.UserInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 user_id_;
  mutable int _cached_size_;
  friend struct protobuf_common_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserInfoList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common.UserInfoList) */ {
 public:
  UserInfoList();
  virtual ~UserInfoList();

  UserInfoList(const UserInfoList& from);

  inline UserInfoList& operator=(const UserInfoList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserInfoList(UserInfoList&& from) noexcept
    : UserInfoList() {
    *this = ::std::move(from);
  }

  inline UserInfoList& operator=(UserInfoList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserInfoList& default_instance();

  static inline const UserInfoList* internal_default_instance() {
    return reinterpret_cast<const UserInfoList*>(
               &_UserInfoList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(UserInfoList* other);
  friend void swap(UserInfoList& a, UserInfoList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserInfoList* New() const PROTOBUF_FINAL { return New(NULL); }

  UserInfoList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserInfoList& from);
  void MergeFrom(const UserInfoList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserInfoList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .common.UserInfo list = 2;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 2;
  const ::common::UserInfo& list(int index) const;
  ::common::UserInfo* mutable_list(int index);
  ::common::UserInfo* add_list();
  ::google::protobuf::RepeatedPtrField< ::common::UserInfo >*
      mutable_list();
  const ::google::protobuf::RepeatedPtrField< ::common::UserInfo >&
      list() const;

  // @@protoc_insertion_point(class_scope:common.UserInfoList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::common::UserInfo > list_;
  mutable int _cached_size_;
  friend struct protobuf_common_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UserId

// uint64 user_id = 1;
inline void UserId::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UserId::user_id() const {
  // @@protoc_insertion_point(field_get:common.UserId.user_id)
  return user_id_;
}
inline void UserId::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:common.UserId.user_id)
}

// -------------------------------------------------------------------

// UserIdList

// repeated .common.UserId list = 2;
inline int UserIdList::list_size() const {
  return list_.size();
}
inline void UserIdList::clear_list() {
  list_.Clear();
}
inline const ::common::UserId& UserIdList::list(int index) const {
  // @@protoc_insertion_point(field_get:common.UserIdList.list)
  return list_.Get(index);
}
inline ::common::UserId* UserIdList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:common.UserIdList.list)
  return list_.Mutable(index);
}
inline ::common::UserId* UserIdList::add_list() {
  // @@protoc_insertion_point(field_add:common.UserIdList.list)
  return list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::common::UserId >*
UserIdList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:common.UserIdList.list)
  return &list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::common::UserId >&
UserIdList::list() const {
  // @@protoc_insertion_point(field_list:common.UserIdList.list)
  return list_;
}

// -------------------------------------------------------------------

// UserInfo

// uint64 user_id = 1;
inline void UserInfo::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UserInfo::user_id() const {
  // @@protoc_insertion_point(field_get:common.UserInfo.user_id)
  return user_id_;
}
inline void UserInfo::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:common.UserInfo.user_id)
}

// -------------------------------------------------------------------

// UserInfoList

// repeated .common.UserInfo list = 2;
inline int UserInfoList::list_size() const {
  return list_.size();
}
inline void UserInfoList::clear_list() {
  list_.Clear();
}
inline const ::common::UserInfo& UserInfoList::list(int index) const {
  // @@protoc_insertion_point(field_get:common.UserInfoList.list)
  return list_.Get(index);
}
inline ::common::UserInfo* UserInfoList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:common.UserInfoList.list)
  return list_.Mutable(index);
}
inline ::common::UserInfo* UserInfoList::add_list() {
  // @@protoc_insertion_point(field_add:common.UserInfoList.list)
  return list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::common::UserInfo >*
UserInfoList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:common.UserInfoList.list)
  return &list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::common::UserInfo >&
UserInfoList::list() const {
  // @@protoc_insertion_point(field_list:common.UserInfoList.list)
  return list_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace common

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::common::ErrorCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::common::ErrorCode>() {
  return ::common::ErrorCode_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_common_2eproto__INCLUDED
